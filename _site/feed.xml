<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2021-10-09T19:08:51+02:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Beatriz Uezu Page</title><subtitle>A blog about technology and stuff related</subtitle><entry><title type="html">Kubernetes Notes - Introduction - Part 1</title><link href="http://localhost:4000/kubernetes-notes/" rel="alternate" type="text/html" title="Kubernetes Notes - Introduction - Part 1" /><published>2021-10-05T00:00:00+02:00</published><updated>2021-10-05T00:00:00+02:00</updated><id>http://localhost:4000/kubernetes-notes</id><content type="html" xml:base="http://localhost:4000/kubernetes-notes/">&lt;p&gt;Some kubernetes studies notes üéâ&lt;/p&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;kubernetes&quot;&gt;Kubernetes&lt;/h1&gt;

&lt;h2 id=&quot;what-do-i-need-to-know-first-to-undestand-kubernetes&quot;&gt;What do I need to know first to undestand Kubernetes?&lt;/h2&gt;
&lt;h3 id=&quot;containers&quot;&gt;Containers&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;To provide portable and isolated virtual environment&lt;/li&gt;
  &lt;li&gt;Need to be managed and connected to external world&lt;/li&gt;
  &lt;li&gt;Must be scheduled, distribuited and load balanced and the data persisted somewhere&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;containers-orchestration&quot;&gt;Containers Orchestration&lt;/h3&gt;

&lt;h2 id=&quot;what-is-kubernetes&quot;&gt;What is Kubernetes&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;‚ÄúKubernetes‚Äù is the Greek word which means helmsman or ship pilot. With this analogy in mind, we can think of Kubernetes as the pilot on a ship of containers.&lt;/li&gt;
  &lt;li&gt;Referred to as k8s&lt;/li&gt;
  &lt;li&gt;The Kubernetes project focuses on building a robust platform (a fault-tolerant and scalable solution) for running thousands of containers in production.&lt;/li&gt;
  &lt;li&gt;Can be achieved by creating a single controller/management unit, after connecting multiple nodes together. This controller/management unit is generally referred to as a container orchestrator.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;features&quot;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Automatic bin packing&lt;/li&gt;
  &lt;li&gt;Self-healing: Kubernetes automatically replaces and reschedules containers from failed nodes&lt;/li&gt;
  &lt;li&gt;Horizontal scaling: scaled manually or automatically based on CPU or custom metrics utilization.&lt;/li&gt;
  &lt;li&gt;Service discovery and Load balancing&lt;/li&gt;
  &lt;li&gt;Automated rollouts and rollbacks: to prevent any downtime&lt;/li&gt;
  &lt;li&gt;Secret and configuration management&lt;/li&gt;
  &lt;li&gt;Storage orchestration&lt;/li&gt;
  &lt;li&gt;Batch execution: supports batch execution, long-running jobs, and replaces failed containers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;why-use-kubernetes&quot;&gt;Why use Kubernetes?&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Can be deployed in many environments such as local or remote Virtual Machines, bare metal, or in public/private/hybrid/multi-cloud setups&lt;/li&gt;
  &lt;li&gt;Kubernetes‚Äô architecture is modular and pluggable&lt;/li&gt;
  &lt;li&gt;Kubernetes‚Äô functionality can be extended&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;importants-terms&quot;&gt;Importants terms&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Node: or workers, it runs proccess. It contains the app, proxy and kubelet, it can has one or more pods.&lt;/li&gt;
  &lt;li&gt;Kubelet: responsible to inform to control plane how many cpu, memory the node has.&lt;/li&gt;
  &lt;li&gt;Control plane: virtual machine, it run a lot of services, such as scheduler service, API server, node controller and state storage (etcd).&lt;/li&gt;
  &lt;li&gt;Kubectl: Kubernetes CLI, point of control for all apps based in Kubernetes, based in configuration files.&lt;/li&gt;
  &lt;li&gt;Workloads: everthing you can put inside of kubernetes that generate a work rules, like apps and DNS. The workloads are:
    &lt;ul&gt;
      &lt;li&gt;Pod&lt;/li&gt;
      &lt;li&gt;Deployment&lt;/li&gt;
      &lt;li&gt;ReplicaSet&lt;/li&gt;
      &lt;li&gt;Secret&lt;/li&gt;
      &lt;li&gt;Configmap&lt;/li&gt;
      &lt;li&gt;HorizontalPodAutoscaler&lt;/li&gt;
      &lt;li&gt;Service&lt;/li&gt;
      &lt;li&gt;Ingres&lt;/li&gt;
      &lt;li&gt;‚Ä¶&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Pods: the smallest unit in Kubernetes, you can run one or more containers. Each pod contains an internal IP, it runs the application in the container and it can has or not a volume. Volume is a pre-existing data structure to use in the pod to share files or to use a temporary files.
  &lt;img src=&quot;/assets/images/k8s-pods.png&quot; alt=&quot;Pods&quot; class=&quot;center-image&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Labels: as ‚Äúnametags‚Äù to identify things, it can be used to query based on the labels.&lt;/li&gt;
  &lt;li&gt;Deployments: deployments manages and adds ‚Äúintelligence‚Äù to pods, and it can group pods by an label. Also, you can define the number of replicas inside of the deployment
  &lt;img src=&quot;/assets/images/k8s-deployment.png&quot; alt=&quot;Deployment&quot; class=&quot;center-image&quot; /&gt;
  &lt;img src=&quot;/assets/images/k8s-deployment-file-example.png&quot; alt=&quot;Deployment&quot; class=&quot;center-image&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Replicaset: it created by a deployment. It manage the number of replicas inside of the cluster. Each one contains a different image version, it is able to create versions of images. It always keep the desired number state.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Replication Controllers: responsible to manage the numbers of pods, pods‚Äô lifecycle, scaling up and down, rolling deployments, and monitoring.&lt;/li&gt;
  &lt;li&gt;Services: Responsible to tell to the rest of the Kubernetes environment what services your application provides, the service IP addresses and ports remain the same.&lt;/li&gt;
  &lt;li&gt;Volume: Location where containers can access and store information.&lt;/li&gt;
  &lt;li&gt;Namespaces: group of services, pods, replication controllers, and volumes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/k8s-concepts.png&quot; alt=&quot;Some Kubernetes terms&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;sources&quot;&gt;Sources:&lt;/h4&gt;
&lt;p&gt;Post - &lt;a href=&quot;https://www.cncf.io/phippy/the-childrens-illustrated-guide-to-kubernetes/&quot;&gt;The Illustrated Children‚Äôs Guide to Kubernetes&lt;/a&gt;
Youtube Video - &lt;a href=&quot;https://www.youtube.com/watch?v=4ht22ReBjno&quot;&gt;The Illustrated Children‚Äôs Guide to Kubernetes&lt;/a&gt;
Course - &lt;a href=&quot;https://www.edx.org/course/introduction-to-kubernetes&quot;&gt;Introduction to Kubernetes&lt;/a&gt;
GitHub - &lt;a href=&quot;https://github.com/badtuxx/DescomplicandoKubernetes&quot;&gt;Descomplicando Kuberntes&lt;/a&gt;
Bootcamp - &lt;a href=&quot;https://channel9.msdn.com/Series/AKS-Bootcamp-From-zero-to-container-hero&quot;&gt;Maratona AKS: Tudo sobre Kubernetes de A a Z&lt;/a&gt;
Youtube Video - &lt;a href=&quot;https://youtu.be/X48VuDVv0do&quot;&gt;Kubernetes Tutorial for Beginners - FULL COURSE in 4 Hours&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;</content><author><name>beatrizuezu</name></author><category term="blog" /><category term="kubernetes" /><category term="notes" /><category term="studies" /><summary type="html">Some kubernetes studies notes üéâ</summary></entry><entry><title type="html">My Work Out Process</title><link href="http://localhost:4000/work-out-process/" rel="alternate" type="text/html" title="My Work Out Process" /><published>2021-08-31T00:00:00+02:00</published><updated>2021-08-31T00:00:00+02:00</updated><id>http://localhost:4000/work-out-process</id><content type="html" xml:base="http://localhost:4000/work-out-process/">&lt;p&gt;I have completed 1 year working out at home consistently. 
 üéâ&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: this post is related to my process and I‚Äôm trying to motivate you to be high on endorphin, try to figure out what kind of work out/sport works for you.&lt;/p&gt;

&lt;p&gt;I had to start working out because I was sedentary before the pandemic started (2020, March) and I was sick when I returned from an exchange. After eating something fatty I got sick, experiencing headache and nausea. So, I decided to investigate these problems and I went to 3 or 4 doctors and nutritionists. I had to do a lot of exams. The conclusion was: I had to do physical exercises and change my diet.&lt;/p&gt;

&lt;p&gt;Let‚Äôs focus on the work out process here. I decided to work out at home due to COVID and quarantine. It was not easy to start and stick to this routine. At the beginning, I started to do it 4 times a week and anaerobic on weekends, with time I was adapting my training with my availability. There was a period that I did it 3 times a week on alternate days and I noticed that during the days I didn‚Äôt workout I was lazier and less willing, so I decided to work out every day in less time.&lt;/p&gt;

&lt;p&gt;I can realize the work out routine helps me sleep better, dealing with the anxiety and self-esteem, I feel more willing and that I have some muscles that I couldn‚Äôt imagine! üòÑ&lt;/p&gt;

&lt;p&gt;Not everyday I‚Äôm motivated to work out, but I have to do it. After the work out I feel more energetic ‚ö°. I like to be high on endorphin üòÇ there is a Brazilian hashtag #ChapadinhaDeEndorfina and a profile with the same name on Instagram.&lt;/p&gt;

&lt;p&gt;I‚Äôm not even close to being an athlete, but it changed my life completely. I would like to do many different sports, like crossfit, boxing, running (I‚Äôm trying this one occasionally), cycling (when I was in Brazil I usually used to cycle once a week), soccer and handball (I used to play when I was at school lol).&lt;/p&gt;

&lt;p&gt;Ah, it‚Äôs an important point here, I‚Äôm followed up by a physical education professional. This is a good option to not be hurt while working out.&lt;/p&gt;

&lt;p&gt;I‚Äôll try to write more in English just to practice, feel free to send me a message if you would like to talk more about it with me or anything related :)&lt;/p&gt;

&lt;p&gt;Thank you for reading &amp;lt;3&lt;/p&gt;

&lt;hr /&gt;</content><author><name>beatrizuezu</name></author><category term="blog" /><category term="workout" /><category term="endorphin" /><category term="habit" /><summary type="html">I have completed 1 year working out at home consistently. üéâ</summary></entry><entry><title type="html">Twelve Factor App</title><link href="http://localhost:4000/twelve-factor-app/" rel="alternate" type="text/html" title="Twelve Factor App" /><published>2021-06-24T00:00:00+02:00</published><updated>2021-06-24T00:00:00+02:00</updated><id>http://localhost:4000/twelve-factor-app</id><content type="html" xml:base="http://localhost:4000/twelve-factor-app/">&lt;p&gt;Essas s√£o as minhas anota√ß√µes do meu estudo sobre 12 Factor App, aproveitei tamb√©m para compartilhar esses conhecimentos com o meu time do trabalho :)&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;metodologia-de-aplica√ß√µes-doze-fatores-ou-12-factor-app&quot;&gt;Metodologia de aplica√ß√µes doze fatores ou 12 Factor App&lt;/h1&gt;

&lt;h2 id=&quot;o-que-√©&quot;&gt;O que √©?&lt;/h2&gt;

&lt;p&gt;√â uma metodologia criada pelo Heroku que traz doze regras/princ√≠pios/boas pr√°ticas de desenvolvimento de software que podem ser aplicada em qualquer linguagem de programa√ß√£o e que utilizem qualquer combina√ß√£o de servi√ßos de suportes (banco de dados, caches‚Ä¶).&lt;/p&gt;

&lt;p&gt;Essas pr√°ticas nos ajudam a automatizar e minimizar a configura√ß√£o inicial do projeto, ter uma portabilidade entre os ambientes em que o projeto ser√° executado, facilitar o deploy em servi√ßos em cloud, minimizar diverg√™ncias entre ambientes e escalar a aplica√ß√£o de uma forma sustent√°vel.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/pt_br/&quot;&gt;Documenta√ß√£o em portug√™s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/&quot;&gt;Documenta√ß√£o em ingl√™s&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;quando-e-como-utilizar&quot;&gt;Quando e como utilizar?&lt;/h2&gt;

&lt;p&gt;Dependendo do projeto conseguimos aplicar a maioria dos fatores,mas ser√° necess√°rio o entendimento da necessidade para que n√£o torne o projeto complexo. Quanto mais fatores utilizado mais o software estar√° pronto para ser utilizado como um servi√ßo (&lt;em&gt;Software as a Service&lt;/em&gt;, SAAS).&lt;/p&gt;

&lt;h2 id=&quot;os-12-fatores&quot;&gt;Os 12 fatores&lt;/h2&gt;

&lt;h3 id=&quot;01---base-de-c√≥digo-codebase&quot;&gt;01 - Base de c√≥digo (Codebase)&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;One codebase tracked in revision control, many deploys&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;‚ÄúUma base de c√≥digo com rastreamento utilizando controle de revis√£o, muitos deploys‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Ou seja, utilizar um sistema de controle de vers√£o de c√≥digo, como git, mercurial ou subversion, para ter o c√≥digo centralizado em um reposit√≥rio. Se tivermos mais de uma aplica√ß√£o compartilhando o mesmo c√≥digo, estamos violando os 12 fatores. A solu√ß√£o para isso √© fatorar o c√≥digo compartilhado em uma biblioteca e incluir  atrav√©s de um gerenciador de &lt;a href=&quot;pr√≥ximo t√≥pico.&quot;&gt;depend√™ncias&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;V√°rias aplica√ß√µes/servi√ßos devem estar base de c√≥digo independentes, para que elas sejam auto contidas, assim a altera√ß√£o em uma aplica√ß√£o n√£o dependa e impacte a outra.&lt;/p&gt;

&lt;p&gt;Podemos ter alguns ambientes para fazer o deploy (implanta√ß√£o do c√≥digo), ambiente de desenvolvimento, tamb√©m chamado de ambiente local, homologa√ß√£o (staging) e produ√ß√£o (production). Cada pessoa desenvolvedora pode ter uma vers√£o da aplica√ß√£o rodando no ambiente de desenvolvimento (ambiente local), assim como os ambientes de homologa√ß√£o e produ√ß√£o podemos ter vers√µes diferentes em cada deploy.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/pt_br/codebase&quot;&gt;Documenta√ß√£o em portug√™s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/codebase&quot;&gt;Documenta√ß√£o em ingl√™s&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;02---depend√™ncias-dependencies&quot;&gt;02 - Depend√™ncias (Dependencies)&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Explicitly declare and isolate dependencies&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;‚ÄúDeclare e isole explicitamente as depend√™ncias‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Maioria das linguagens de programa√ß√£o possuem gerenciadores de depend√™ncias, com elas podemos instalar as bibliotecas que s√£o utilizadas na aplica√ß√£o. Todas as depend√™ncias precisam estar explicitamentes declaradas por meio de um manifesto de declara√ß√£o de depend√™ncia, ou seja, haver√° um arquivo que cont√©m as bibliotecas que s√£o utilizadas na aplica√ß√£o e qual a vers√£o usada na aplica√ß√£o. Podemos utilizar ferramentas que isolem o ambiente para que n√£o tenhamos conflitos de depend√™ncias com outras bibliotecas de outros projetos.&lt;/p&gt;

&lt;p&gt;Por exemplo, no Python podemos utilizar o pip, pipenv, poetry como gerenciadores de depend√™ncia e o virtualenv para isolar o ambiente. No Java temos o gradle e o maven, no Ruby bundler como gerenciadores de depend√™ncia.&lt;/p&gt;

&lt;p&gt;Isso simplifica o processo de configura√ß√£o da aplica√ß√£o para as pessoas desenvolvedoras e tamb√©m facilita a portabilidade de servidor.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/pt_br/dependencies&quot;&gt;Documenta√ß√£o em portug√™s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/dependencies&quot;&gt;Documenta√ß√£o em ingl√™s&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;03---configura√ß√µes-config&quot;&gt;03 - Configura√ß√µes (Config)&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Store config in the environment&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;‚ÄúArmazene as configura√ß√µes no ambiente‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Esse fator significa que devemos armazenar as configura√ß√µes no ambiente, pois as configura√ß√µes do aplicativo variam em cada ambiente (local, staging e production) e assim conseguimos ter as configura√ß√µes separadas do c√≥digo. Entende-se como configura√ß√£o como credenciais para servi√ßos externos e da aplica√ß√£o, vari√°veis que diferem em cada ambiente, como o hostname e banco de dados.&lt;/p&gt;

&lt;p&gt;Na aplica√ß√£o podemos ter um arquivo para armazenar essas configura√ß√µes e que n√£o deve ser versionado. Chamamos essas configura√ß√µes de vari√°veis de ambiente (&lt;em&gt;environment variables&lt;/em&gt; ou &lt;em&gt;env vars&lt;/em&gt;), as vari√°veis s√£o definidas no pr√≥prio sistema operacional.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/pt_br/config&quot;&gt;Documenta√ß√£o em portug√™s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/config&quot;&gt;Documenta√ß√£o em ingl√™s&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;04---servi√ßos-de-apoio-backing-services&quot;&gt;04 - Servi√ßos de Apoio (Backing Services)&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Treat backing services as attached resources&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;‚ÄúTrate servi√ßos de apoio como recursos anexados‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;S√£o considerados servi√ßos de apoio qualquer servi√ßo terceiro como banco de dados, sistema de mensageria e filas, servi√ßos de emails e de cache, servi√ßos de m√©tricas e logs, ou seja, s√£o servi√ßos que a aplica√ß√£o utiliza como parte do sistema, isto √© um recurso anexado.&lt;/p&gt;

&lt;p&gt;Esse fator sugere que em um servi√ßo local e de terceiros n√£o deve haver distin√ß√£o. Isso quer dizer que, caso seja necess√°rio a troca de um recurso para outro n√£o deve haver mudan√ßa no c√≥digo, a n√£o ser que tenhamos algo muito espec√≠fico que estamos utilizando do recurso. Podemos utilizar o exemplo a mudan√ßa do banco de dados MySQL para um outro banco seja PostgreSQL ou RDS da Amazon, isso deve ser transparente para a aplica√ß√£o.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/pt_br/backing-services&quot;&gt;Documenta√ß√£o em portug√™s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/backing-services&quot;&gt;Documenta√ß√£o em ingl√™s&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;05---construa-lance-execute-build-release-run&quot;&gt;05 - Construa, lance, execute (Build, release, run)&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Strictly separate build and run stages&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;‚ÄúSepare estritamente os est√°gios de constru√ß√£o e execu√ß√£o‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;O processo do deploy da base de c√≥digo ocorre em tr√™s est√°gios:&lt;/p&gt;

&lt;h4 id=&quot;constru√ß√£o-build&quot;&gt;Constru√ß√£o (&lt;em&gt;Build&lt;/em&gt;)&lt;/h4&gt;

&lt;p&gt;Nesse est√°gio √© obtido as depend√™ncias do projeto, compilado em bin√°rio e lida com os arquivos est√°ticos (&lt;em&gt;assets&lt;/em&gt;) para que seja gerado o execut√°vel do projeto.&lt;/p&gt;

&lt;h4 id=&quot;lan√ßamento-release&quot;&gt;Lan√ßamento (&lt;em&gt;Release&lt;/em&gt;)&lt;/h4&gt;

&lt;p&gt;O est√°gio de release √© a combina√ß√£o do build com as configura√ß√µes de ambiente em que ser√° feita o deploy.√â muito comum termos vers√µes de release com um identificador √∫nico, pode ser utilizado um n√∫mero incremental (como &lt;code class=&quot;highlighter-rouge&quot;&gt;v123&lt;/code&gt;), &lt;a href=&quot;https://semver.org/lang/pt-BR/&quot;&gt;versionamento sem√¢ntico&lt;/a&gt; ( como &lt;code class=&quot;highlighter-rouge&quot;&gt;2.1.1&lt;/code&gt;) ou por data e hora (como &lt;code class=&quot;highlighter-rouge&quot;&gt;202106052230&lt;/code&gt;), assim caso precise fazer a revers√£o da vers√£o anterior, tamb√©m conhecido como &lt;em&gt;rollback&lt;/em&gt;, fique f√°cil de identificar o release.&lt;/p&gt;

&lt;h4 id=&quot;execu√ß√£o-run&quot;&gt;Execu√ß√£o (&lt;em&gt;Run&lt;/em&gt;)&lt;/h4&gt;

&lt;p&gt;√â nesse est√°gio em que ser√° inicializado os processos para que a aplica√ß√£o seja executada.&lt;/p&gt;

&lt;p&gt;Para cada est√°gio h√° ferramentas especificas da cada linguaguem em fazer a automatiza√ß√£o do build, release e run.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/pt_br/build-release-run&quot;&gt;Documenta√ß√£o em portug√™s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/build-release-run&quot;&gt;Documenta√ß√£o em ingl√™s&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;06---processos-processes&quot;&gt;06 - Processos (&lt;em&gt;Processes&lt;/em&gt;)&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Execute the app as one or more stateless processes&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;‚ÄúExecute a aplica√ß√£o como um ou mais processos que n√£o armazenam estado‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Esse fator significa que os processos n√£o armazenam estados (&lt;em&gt;stateless&lt;/em&gt;) e n√£o devem compartilhar nada entre si. Caso os estados precisem ser armazenados, devemos utilizar um servi√ßo de apoio como uma base dados ou sistema de cache.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/pt_br/processes&quot;&gt;Documenta√ß√£o em portug√™s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/processes&quot;&gt;Documenta√ß√£o em ingl√™s&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;07---v√≠nculo-de-portas-port-binding&quot;&gt;07 - V√≠nculo de Portas (&lt;em&gt;Port binding&lt;/em&gt;)&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Export services via port binding&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;‚ÄúExporte servi√ßos via v√≠nculo de portas‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A aplica√ß√£o exporta uma porta HTTP como um servi√ßo atrav√©s dessa porta, assim atua como um servi√ßo independente podendo servir com um servi√ßo de apoio e n√£o dependa de servidores externos.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/pt_br/port-binding&quot;&gt;Documenta√ß√£o em portug√™s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/port-binding&quot;&gt;Documenta√ß√£o em ingl√™s&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;08---concorr√™ncia-concurrency&quot;&gt;08 - Concorr√™ncia (&lt;em&gt;Concurrency&lt;/em&gt;)&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Scale out via the process model&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;‚ÄúEscale atrav√©s do processo modelo‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A aplica√ß√£o deve ter um modelo para conseguir escalar. A escalabilidade pode ser:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Horizontal: adi√ß√£o de mais servidores com as mesmas configura√ß√µes de recursos (CPU, RAM);&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Vertical: aumentar os recursos de cada servidor no qual a aplica√ß√£o ou o sistema est√° sendo executado.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/pt_br/concurrency&quot;&gt;Documenta√ß√£o em portug√™s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/concurrency&quot;&gt;Documenta√ß√£o em ingl√™s&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;09---descartabilidade-disposability&quot;&gt;09 - Descartabilidade (&lt;em&gt;Disposability&lt;/em&gt;)&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Maximize robustness with fast startup and graceful shutdown&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;‚ÄúMaximize robustez com inicializa√ß√£o r√°pida e desligamento gracioso‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Os processos devem inicializar em poucos segundos para que a aplica√ß√£o esteja pronta para receber requisi√ß√µes. A inicializa√ß√£o r√°pida promove agilidade para os processos de releases e escalabilidade.&lt;/p&gt;

&lt;p&gt;Quanto o desligamento gracioso quer dizer que o servidor para de receber novas requisi√ß√µes e finaliza o que estiver em andamento e encerrar o processo.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/pt_br/disposability&quot;&gt;Documenta√ß√£o em portug√™s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/disposability&quot;&gt;Documenta√ß√£o em ingl√™s&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;10---paridade-entre-desenvolvimento-e-produ√ß√£o-devprod-parity&quot;&gt;10 - Paridade entre desenvolvimento e produ√ß√£o (&lt;em&gt;Dev/prod parity&lt;/em&gt;)&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Keep development, staging, and production as similar as possible&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;‚ÄúMantenha o desenvolvimento, homologa√ß√£o e produ√ß√£o o mais similares poss√≠vel‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Manter os ambientes mais similares poss√≠veis para que tenhamos o m√≠nimo de diverg√™ncias entre os ambientes de desenvolvimento, staging e produ√ß√£o.&lt;/p&gt;

&lt;p&gt;Esse fator pretende diminuir as diverg√™ncias em tr√™s √°reas:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;vers√£o de c√≥digo: a pessoa desenvolvedora escreve o c√≥digo em algumas horas e faz o deploy minutos depois;&lt;/li&gt;
  &lt;li&gt;equipes: a equipe que est√° envolvida no desenvolvimento daquele c√≥digo realiza e acompanha o deploy em produ√ß√£o;&lt;/li&gt;
  &lt;li&gt;ferramentas: utilizar os mesmos servi√ßos de apoio nos ambientes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/pt_br/dev-prod-parity&quot;&gt;Documenta√ß√£o em portug√™s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/dev-prod-parity&quot;&gt;Documenta√ß√£o em ingl√™s&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;11---logs-logs&quot;&gt;11 - Logs (&lt;em&gt;Logs&lt;/em&gt;)&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Treat logs as event streams&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;‚ÄúTrate logs como fluxos de eventos‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Os logs nos d√£o visibilidade sobre o comportamento da aplica√ß√£o, podemos agregar os eventos e ordernar por tempo de execu√ß√£o de todos os processos em execu√ß√£o e de servi√ßos de apoio.&lt;/p&gt;

&lt;p&gt;No ambiente de desenvolvimentos, os logs devem ser exibidos no terminal, enquanto que nos ambientes de staging e produ√ß√£o devemos utilizar ferramentas (como Graylog, Logentries, ELK) para nos auxiliar com a coleta e armazenamento dos logs.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/pt_br/logs&quot;&gt;Documenta√ß√£o em portug√™s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/logs&quot;&gt;Documenta√ß√£o em ingl√™s&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;12---processos-administrativos-admin-processes&quot;&gt;12 - Processos administrativos (&lt;em&gt;Admin processes&lt;/em&gt;)&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Run admin/management tasks as one-off processes&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;‚ÄúRode tarefas de administra√ß√£o/gest√£o em processos pontuais‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Processos administrativos s√£o processos pontuais, como migra√ß√µes, scripts e execu√ß√µes no console, devem ser executados em ambientes id√™nticos e isolados de ambientes em que tarefas de processamento longo rodam.&lt;/p&gt;

&lt;p&gt;Esses processos tamb√©m devem ser versionados, estar dentro do processo de deploy e utilizar as mesmas configura√ß√µes do ambiente.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/pt_br/admin-processes&quot;&gt;Documenta√ß√£o em portug√™s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/admin-processes&quot;&gt;Documenta√ß√£o em ingl√™s&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;notas&quot;&gt;Notas&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.udemy.com/course/git-e-github-para-iniciantes/&quot;&gt;Curso de git e github&lt;/a&gt; - gratuito&lt;/p&gt;

&lt;h2 id=&quot;refer√™ncias&quot;&gt;Refer√™ncias&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Youtube - &lt;a href=&quot;https://youtu.be/C2VbGlOBYyw&quot;&gt;The Twelve Factor APP - Zup Insights&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Youtube - &lt;a href=&quot;https://youtu.be/Xayg7f2utgk&quot;&gt;12 Factor App (Boas pr√°ticas para criar uma aplica√ß√£o SaaS) // Dicion√°rio do Programador&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Alura - &lt;a href=&quot;https://www.alura.com.br/curso-online-the-twelve-factor-app&quot;&gt;The Twelve-Factor App: Metodologia para constru√ß√£o de aplica√ß√µes robustas&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Medium - &lt;a href=&quot;https://medium.com/trainingcenter/twelve-factor-app-f51665af95e7&quot;&gt;Twelve Factor app - Boas pr√°ticas para microsservi√ßos&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Obrigada por ter lido &amp;lt;3&lt;/p&gt;

&lt;hr /&gt;</content><author><name>beatrizuezu</name></author><category term="blog" /><category term="twelve factor app" /><category term="metodologia de aplica√ß√µes doze fatores" /><summary type="html">Essas s√£o as minhas anota√ß√µes do meu estudo sobre 12 Factor App, aproveitei tamb√©m para compartilhar esses conhecimentos com o meu time do trabalho :)</summary></entry><entry><title type="html">Fun√ß√µes de Escopo do Kotlin</title><link href="http://localhost:4000/funcoes-escopo-kotlin/" rel="alternate" type="text/html" title="Fun√ß√µes de Escopo do Kotlin" /><published>2021-04-01T00:00:00+02:00</published><updated>2021-04-01T00:00:00+02:00</updated><id>http://localhost:4000/funcoes-escopo-kotlin</id><content type="html" xml:base="http://localhost:4000/funcoes-escopo-kotlin/">&lt;p&gt;Recentemente comecei a trabalhar em um projeto em Kotlin, e no trabalho tenho a oportunidade de aprender e a compartilhar conhecimento com meu time. Esse foi o primeiro assunto que escolhi compartilhar com eles :)&lt;/p&gt;

&lt;p&gt;Esse post √© o compilado do que li e entendi &lt;del&gt;ou n√£o&lt;/del&gt; sobre o assunto.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;o-que-s√£o-fun√ß√µes-de-escopo-scope-functions&quot;&gt;O que s√£o Fun√ß√µes de Escopo (Scope Functions)?&lt;/h2&gt;

&lt;p&gt;S√£o fun√ß√µes da biblioteca padr√£o do Kotlin cujo o objetivo √© executar um bloco de c√≥digo dentro de um escopo/contexto de um objeto que podem ou n√£o ter um valor de retorno. S√£o cinco fun√ß√µes: &lt;code class=&quot;highlighter-rouge&quot;&gt;let&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;run&lt;/code&gt; ,  &lt;code class=&quot;highlighter-rouge&quot;&gt;with&lt;/code&gt; , &lt;code class=&quot;highlighter-rouge&quot;&gt;apply&lt;/code&gt; e &lt;code class=&quot;highlighter-rouge&quot;&gt;also&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Para come√ßar vamos utilizar a classe &lt;code class=&quot;highlighter-rouge&quot;&gt;Product&lt;/code&gt; como exemplo:&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;data class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;isActive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Boolean&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;deactivate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;isActive&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;product&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Smarthphone&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;999.99&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Quando queremos mudar os atributo de &lt;code class=&quot;highlighter-rouge&quot;&gt;product&lt;/code&gt; fazemos isso:&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Smarthpone Bonitono&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;00&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deativate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Com as fun√ß√µes de escopo tamb√©m √© poss√≠vel mudar os atributos e deixar o c√≥digo mais com o estilo do Kotlin.&lt;/p&gt;

&lt;h2 id=&quot;let&quot;&gt;Let&lt;/h2&gt;

&lt;p&gt;Podemos utilizar o &lt;code class=&quot;highlighter-rouge&quot;&gt;let&lt;/code&gt; para alterar os atributos de &lt;code class=&quot;highlighter-rouge&quot;&gt;product&lt;/code&gt; e usamos o &lt;code class=&quot;highlighter-rouge&quot;&gt;it&lt;/code&gt; para referenciar o &lt;code class=&quot;highlighter-rouge&quot;&gt;product&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Smarthpone Bonitono&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;00&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deactivate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;√â poss√≠vel trocar o &lt;code class=&quot;highlighter-rouge&quot;&gt;it&lt;/code&gt; para qualquer outra vari√°vel para referenciar o product:&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;att&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;att&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Smarthpone Bonitono&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;att&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;00&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;att&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deactivate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;      
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  Product(title=Smarthpone Bonitono, price=1000.0, isActive=false)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Logo, os atributos de &lt;code class=&quot;highlighter-rouge&quot;&gt;product&lt;/code&gt; foram modificados com &lt;code class=&quot;highlighter-rouge&quot;&gt;let&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Agora vamos entender o valor de retorno do &lt;code class=&quot;highlighter-rouge&quot;&gt;let&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Smarthpone Bonitono&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;00&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deactivate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  kotlin.Unit
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ao imprimir a vari√°vel &lt;code class=&quot;highlighter-rouge&quot;&gt;result&lt;/code&gt; o retorno √© um &lt;a href=&quot;https://kotlinlang.org/docs/functions.html#unit-returning-functions&quot;&gt;kotlin.Unit&lt;/a&gt; significa que o retorno √© um valor n√£o √∫til. Portanto, conclu√≠mos que o &lt;code class=&quot;highlighter-rouge&quot;&gt;let&lt;/code&gt; n√£o retorna um valor.&lt;/p&gt;

&lt;p&gt;Podemos utilizar o &lt;code class=&quot;highlighter-rouge&quot;&gt;let&lt;/code&gt; quando invocamos uma ou mais fun√ß√µes em resultados de chamadas encadeadas:&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;numbers&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mutableListOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;one&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;two&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;three&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;four&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;five&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Se dentro do bloco de c√≥digo do &lt;code class=&quot;highlighter-rouge&quot;&gt;let&lt;/code&gt; tiver apenas uma fun√ß√£o com o argumento &lt;code class=&quot;highlighter-rouge&quot;&gt;it&lt;/code&gt;, podemos escrever o escopo da fun√ß√£o &lt;code class=&quot;highlighter-rouge&quot;&gt;let&lt;/code&gt; como:&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;run&quot;&gt;Run&lt;/h2&gt;

&lt;p&gt;Tamb√©m √© poss√≠vel utilizar o &lt;code class=&quot;highlighter-rouge&quot;&gt;run&lt;/code&gt; para mudar os atributos de &lt;code class=&quot;highlighter-rouge&quot;&gt;product&lt;/code&gt; e utilizamos o &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt; para referenciar o escopo do objeto:&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;product&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Smarthphone&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;999.99&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Smarthpone Bonitono&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;700.00&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deactivate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;O uso do &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt; √© opcional, e tamb√©m deixa o c√≥digo redundante, portanto podemos escrever dessa forma:&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Smarthpone Bonitono&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;700.00&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;deactivate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Vamos entender o retorno do &lt;code class=&quot;highlighter-rouge&quot;&gt;run&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Smarthpone Bonitono&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;700.00&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;deactivate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//kotlin.Unit
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ao imprimir a vari√°vel &lt;code class=&quot;highlighter-rouge&quot;&gt;result&lt;/code&gt; o retorno √© um &lt;code class=&quot;highlighter-rouge&quot;&gt;[kotlin.Unit&lt;/code&gt;,](https://kotlinlang.org/docs/functions.html#unit-returning-functions) significa que o retorno √© um valor n√£o √∫til. Portanto, conclu√≠mos que o &lt;code class=&quot;highlighter-rouge&quot;&gt;run&lt;/code&gt; n√£o retorna um valor.&lt;/p&gt;

&lt;p&gt;Podemos utilizar o &lt;code class=&quot;highlighter-rouge&quot;&gt;run&lt;/code&gt; para executar opera√ß√µes sobre um objeto e obter um resultado dentro de um escopo.&lt;/p&gt;

&lt;h2 id=&quot;with&quot;&gt;With&lt;/h2&gt;

&lt;p&gt;Utilizamos o &lt;code class=&quot;highlighter-rouge&quot;&gt;with&lt;/code&gt; para executar fun√ß√µes no objeto dentro de um contexto. Podemos ler como ‚Äú&lt;em&gt;com esse objeto, fa√ßa&lt;/em&gt;‚Äù&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;product&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Smarthphone&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;999.99&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;deactivate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;produto desativado&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// produto desativado
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;O valor de retorno do &lt;code class=&quot;highlighter-rouge&quot;&gt;with&lt;/code&gt; √© um &lt;code class=&quot;highlighter-rouge&quot;&gt;kotlin.Unit&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;deactivate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;produto desativado&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// produto desativado
// kotlin.Unit
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;apply&quot;&gt;Apply&lt;/h2&gt;

&lt;p&gt;Podemos utilizar o &lt;code class=&quot;highlighter-rouge&quot;&gt;apply&lt;/code&gt; para alterar os atributos de &lt;code class=&quot;highlighter-rouge&quot;&gt;product&lt;/code&gt;, utilizamos o &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt; para referenciar o escopo do objeto. Podemos ler ‚Äú&lt;em&gt;aplique as seguintes atribui√ß√µes ao objeto&lt;/em&gt;‚Äù&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;product&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Smarthphone&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;999.99&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;apply&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Smarthpone Bonitono&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;00&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deactivate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;O uso do &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt; √© opcional e tamb√©m deixa o c√≥digo redundante, portanto podemos escrever dessa forma:&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;apply&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Smarthpone Bonitono&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;00&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;deactivate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;O valor de retorno do &lt;code class=&quot;highlighter-rouge&quot;&gt;apply&lt;/code&gt; √© o pr√≥prio objeto, podemos imprimir a vari√°vel &lt;code class=&quot;highlighter-rouge&quot;&gt;result&lt;/code&gt; para entender isso:&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;apply&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Smarthpone Bonitono&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;00&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;deactivate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Product(title=Smarthpone Bonitono, price=1000.0, isActive=true)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;also&quot;&gt;Also&lt;/h2&gt;

&lt;p&gt;Usamos o &lt;code class=&quot;highlighter-rouge&quot;&gt;also&lt;/code&gt; para a√ß√µes que utilizam o objeto do contexto como argumento ou quando precisamos de uma refer√™ncia ao inv√©s das propriedades e fun√ß√µes. Podemos ler como: ‚Äú&lt;em&gt;e tamb√©m fa√ßa com o objeto‚Äù.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Para referenciar o objeto dentro do escopo utilizamos o &lt;code class=&quot;highlighter-rouge&quot;&gt;it&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;product&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Smarthphone&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;999.99&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;apply&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Smarthpone Bonitono&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;700.00&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;deactivate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;also&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Promo√ß√£o do Produto $it&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Promo√ß√£o do Produto Product(title=Smarthpone Bonitono, price=700.0, isActive=false)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;objeto-nulos&quot;&gt;Objeto nulos&lt;/h2&gt;

&lt;p&gt;Quando tivermos um objeto que possa ser nulo, as fun√ß√µes de escopo garantem que a fun√ß√£o ser√° chamada apenas se o objeto for n√£o nulo:&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;product2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// O ? permite que a vari√°vel seja nula
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;product2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;tv&quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100.00&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isActive&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;product2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  null
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;resumo&quot;&gt;Resumo&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Fun√ß√£o&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Retorno&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Vari√°vel dentro do escopo&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Uso&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Let&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Unit/Lambda*&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;it&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Fun√ß√µes com chamadas encadeadas e checagem de objetos nulos&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Run&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Unit/Lambda*&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Inicializa√ß√£o do objeto e o c√°lculo do valor de retorno&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;With&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Unit/Lambda*&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Executar fun√ß√µes no objeto dentro de um contexto.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Apply&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Objeto&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Inicializar e configurar um objeto&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Also&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Objeto&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;it&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;A√ß√µes adicionais que n√£o alteram o objeto&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;* Na &lt;a href=&quot;https://kotlinlang.org/docs/scope-functions.html#return-value&quot;&gt;pr√≥pria documenta√ß√£o do Kotlin&lt;/a&gt; diz que retorna o resultado lambda&lt;/p&gt;

&lt;h2 id=&quot;link-√∫til&quot;&gt;Link √∫til&lt;/h2&gt;
&lt;p&gt;Voc√™ pode testar o c√≥digo usando o &lt;a href=&quot;https://play.kotlinlang.org/&quot;&gt;Kotlin Playground&lt;/a&gt;, divirta-se :)&lt;/p&gt;

&lt;h2 id=&quot;refer√™ncias&quot;&gt;Refer√™ncias&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Youtube Playlist - &lt;a href=&quot;https://www.youtube.com/watch?v=i-bWvj10k0k&amp;amp;list=PLMZ2RODGNLRK1D9kOfHLIvnhsdB8C7E4k&quot;&gt;Kotlin Scope Functions Explained&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Documenta√ß√£o Kotlin - &lt;a href=&quot;https://kotlinlang.org/docs/scope-functions.html&quot;&gt;Scope Functions&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Documenta√ß√£o Kotlin - &lt;a href=&quot;https://kotlinlang.org/docs/functions.html#unit-returning-functions&quot;&gt;Unit&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Artigo Medium - &lt;a href=&quot;https://medium.com/@fatihcoskun/kotlin-scoping-functions-apply-vs-with-let-also-run-816e4efb75f5&quot;&gt;Kotlin Scoping Functions apply vs. with, let, also, and run&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Artigo Medium - &lt;a href=&quot;https://medium.com/luizalabs/kotlin-let-run-with-also-ou-apply-24e8745f12fd&quot;&gt;Kotlin: let, run, with, also ou apply?&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Artigo Medium - &lt;a href=&quot;https://proandroiddev.com/kotlin-scope-functions-made-simple-c59b97a04ca2&quot;&gt;Kotlin Scope Functions Made Simple&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Espero que voc√™ tenha entendido sobre as fun√ß√µes de escopo do Kotlin!&lt;/p&gt;

&lt;p&gt;Obrigada por ter lido &amp;lt;3&lt;/p&gt;

&lt;hr /&gt;</content><author><name>beatrizuezu</name></author><category term="blog" /><category term="fun√ß√µes de escopo" /><category term="kotlin" /><summary type="html">Recentemente comecei a trabalhar em um projeto em Kotlin, e no trabalho tenho a oportunidade de aprender e a compartilhar conhecimento com meu time. Esse foi o primeiro assunto que escolhi compartilhar com eles :)</summary></entry><entry><title type="html">Refer√™ncia de objetos</title><link href="http://localhost:4000/referencia-objetos/" rel="alternate" type="text/html" title="Refer√™ncia de objetos" /><published>2019-11-23T00:00:00+01:00</published><updated>2019-11-23T00:00:00+01:00</updated><id>http://localhost:4000/referencia-objetos</id><content type="html" xml:base="http://localhost:4000/referencia-objetos/">&lt;p&gt;J√° aconteceu de voc√™ ter duas vari√°veis com os mesmos valores e alterar uma vari√°vel a outra tamb√©m √© alterada?&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;o-que-√©-vari√°vel-em-programa√ß√£o&quot;&gt;O que √© vari√°vel em programa√ß√£o?&lt;/h1&gt;

&lt;p&gt;Vari√°vel √© uma informa√ß√£o que ser√° armazenada em um endere√ßo da mem√≥ria do computador, para ficar mais f√°cil identificar esse endere√ßo atribuimos um nome para esse valor.&lt;/p&gt;

&lt;h1 id=&quot;caixas-e-post-its&quot;&gt;Caixas e post-its?&lt;/h1&gt;
&lt;p&gt;Para melhor entendimento podemos usar a met√°fora da caixa e do post-its. Em algumas linguagens a vari√°vel representa uma caixa que vai armazenar um determinado valor, ou seja, cada caixa representado por uma vari√°vel ter√° um endere√ßo na mem√≥ria.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/box-autora.png&quot; alt=&quot;vari√°vel autora representado pela caixa com valor beatriz&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;vari√°vel autora representado pela caixa com valor beatriz&lt;/figcaption&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/box-nome.png&quot; alt=&quot;vari√°vel nome representado pela caixa com valor beatriz&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;vari√°vel nome representado pela caixa com valor beatriz&lt;/figcaption&gt;

&lt;p&gt;Em Python, essa met√°fora n√£o √© v√°lida. Podemos dizer que as vari√°veis s√£o como post-its, as vari√°veis quando tiverem o mesmo valor ter√£o a mesma refer√™ncia.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/postits.png&quot; alt=&quot;Valor beatriz com as vari√°veis nome e autora representados pelo post-its&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;Valor beatriz com as vari√°veis nome e autora representados pelo post-its&lt;/figcaption&gt;

&lt;p&gt;Isso pode ser observado nesse c√≥digo:&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;nome = &amp;#39;beatriz&amp;#39;
autora = &amp;#39;beatriz&amp;#39;


id(nome)
#4542762672

id(autora)
#4542762672

id(&amp;#39;beatriz&amp;#39;)
#4542762672&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/beatrizuezu/d840aa64b4a2f7f2f47bf42395c6fd2f.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;A fun√ß√£o &lt;a href=&quot;https://docs.python.org/pt-br/3/library/functions.html#id&quot;&gt;id()&lt;/a&gt; retorna o endere√ßo da mem√≥ria que est√° armazenado aquele determinado valor.&lt;/p&gt;

&lt;h1 id=&quot;listas-tuplas-dicion√°rios-e-conjuntos-armazenam-refer√™ncias&quot;&gt;listas, tuplas, dicion√°rios e conjuntos armazenam refer√™ncias&lt;/h1&gt;
&lt;p&gt;Ao declarar listas, tuplas ou dicion√°rios com os mesmos valores, os objetos n√£o ter√£o o mesmo id, ou seja a mesma refer√™ncia, por√©m se os valores forem iguais ‚Äúapontar√£o‚Äù para o mesmo id.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/lista.jpg&quot; alt=&quot;Desenho ilustrativo das variaveis lista_1 e lista_2&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;Vari√°vies lista_1 e lista_2 possuem os mesmos valores&lt;/figcaption&gt;

&lt;p&gt;Podemos observar no c√≥digo abaixo que a vari√°vel &lt;code class=&quot;highlighter-rouge&quot;&gt;lista_1&lt;/code&gt; e &lt;code class=&quot;highlighter-rouge&quot;&gt;lista_2&lt;/code&gt; possuem os ids diferentes, mas o valor de index 0 de ambas as listas possuem o mesmo id.&lt;/p&gt;

&lt;p&gt;Podemos usar o operador &lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt; para comparar os valores, enquanto o &lt;code class=&quot;highlighter-rouge&quot;&gt;is&lt;/code&gt; √© utilizado para comparar os ids&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;lista_1 = [1, 3, 5, 7]
lista_2 = [1, 3, 5, 7]

# ids das vari√°veis sao diferentes
print(id(lista_1))
print(id(lista_2))

# ids do index 0 sao iguais
print(id(lista_1[0]))
print(id(lista_2[0]))

# verdadeiro, pois os valores sao iguais
print(lista_1 == lista_2)

# falso, pois os ids sao diferentes
print(lista_1 is lista_2)&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/beatrizuezu/35254604b2ce26757ff7bdb1ae61bd26.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Caso atribuirmos o valor de &lt;code class=&quot;highlighter-rouge&quot;&gt;lista_2&lt;/code&gt; em &lt;code class=&quot;highlighter-rouge&quot;&gt;lista_1&lt;/code&gt;, eles ter√£o o mesmo id.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;lista_2 = [1, 3, 5, 7]

lista_1 = lista_2

# os ids serao os mesmos
print(id(lista_1))
print(id(lista_2))

# verdadeiro, pois os valores sao iguais
print(lista_1 == lista_2)

# verdadeiro, pois tem a mesma referencia
print(lista_1 is lista_2)&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/beatrizuezu/2219a404ebd014633f03ce53ca2f4b3c.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Atente-se quando for manipular uma lista ou dicion√°rio que for atribu√≠da a uma outra vari√°vel para nƒÅo perder os valores do objeto, pois estaremos alterando a mesma refer√™ncia!&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;dicionario_1 = {&amp;#39;nome&amp;#39;: &amp;#39;beatriz&amp;#39;}

dicionario_2 = dicionario_1

dicionario_2[&amp;#39;linguagem&amp;#39;] = &amp;#39;python&amp;#39;

print(dicionario_1)
# {&amp;#39;nome&amp;#39;: &amp;#39;beatriz&amp;#39;, &amp;#39;linguagem&amp;#39;: &amp;#39;python&amp;#39;}

print(dicionario_2)
# {&amp;#39;nome&amp;#39;: &amp;#39;beatriz&amp;#39;, &amp;#39;linguagem&amp;#39;: &amp;#39;python&amp;#39;}&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/beatrizuezu/d0081a5b9ee6bbfed64cd8b4162a8f1e.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Para a altera√ß√£o n√£o afetar a vari√°vel original, podemos usar o m√≥dulo &lt;code class=&quot;highlighter-rouge&quot;&gt;copy&lt;/code&gt; com as fun√ß≈çes &lt;a href=&quot;https://docs.python.org/pt-br/3/library/copy.html?highlight=copy#copy.copy&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;copy()&lt;/code&gt;&lt;/a&gt;, que retorna uma c√≥pia rasa, e &lt;a href=&quot;https://docs.python.org/pt-br/3/library/copy.html?highlight=copy#copy.deepcopy&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;deepcopy()&lt;/code&gt;&lt;/a&gt;, que retorna uma c√≥pia profunda.&lt;/p&gt;

&lt;h2 id=&quot;copy&quot;&gt;copy&lt;/h2&gt;
&lt;p&gt;No c√≥digo abaixo estamos usando a fun√ß√£o &lt;code class=&quot;highlighter-rouge&quot;&gt;copy()&lt;/code&gt;&lt;/p&gt;
&lt;noscript&gt;&lt;pre&gt;import copy

lista_1 = [1,2, [9,8]]

# fazendo a copia rasa
lista_2 = copy.copy(lista_1)

print(id(lista_1))
#4527883760

print(id(lista_2))
#4549096704

lista_2[2].append(7)

print(lista_2)
#[1, 2, [9, 8, 7]]

print(lista_1)
#[1, 2, [9, 8, 7]]

print(id(lista_1[2]))
#4549332496

print(id(lista_2[2]))
#4549332496&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/beatrizuezu/c78e72f96cd8568611cba991e98997a4.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Notamos que ao alterar a lista interna (index 2) da vari√°vel &lt;code class=&quot;highlighter-rouge&quot;&gt;lista_2&lt;/code&gt; alterou tamb√©m a vari√°vel &lt;code class=&quot;highlighter-rouge&quot;&gt;lista_1&lt;/code&gt;. Podemos dizer que tanto a &lt;code class=&quot;highlighter-rouge&quot;&gt;lista_1&lt;/code&gt; quanto a &lt;code class=&quot;highlighter-rouge&quot;&gt;lista_2&lt;/code&gt; ‚Äúapontam‚Äù para a mesma lista interna (&lt;code class=&quot;highlighter-rouge&quot;&gt;[9,8]&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/lista-manipulacao.jpg&quot; alt=&quot;Desenho ilustrativos das variaveis lista_1 e lista_2 apontando para a mesma lista [9,8]&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;Desenho ilustrativos das variaveis lista_1 e lista_2 apontando para a mesma lista [9,8]&lt;/figcaption&gt;

&lt;h2 id=&quot;deepcopy&quot;&gt;deepcopy&lt;/h2&gt;
&lt;p&gt;No &lt;code class=&quot;highlighter-rouge&quot;&gt;deepcopy()&lt;/code&gt; √© feita uma c√≥pia profunda&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;import copy

lista_1 = [1,2, [9,8]]

# fazendo a c√≥pia profunda
lista_2 = copy.deepcopy(lista_1)

print(id(lista_1))
#4548273648

print(id(lista_2))
#4543572480

print(id(lista_1[2]))
#4547001952

print(id(lista_2[2]))
#4543706128&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/beatrizuezu/b1ddc80c92da70608384fa0f7864d719.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;As vari√°veis n√£o compartilham da mesma refer√™ncia quando usado o &lt;code class=&quot;highlighter-rouge&quot;&gt;deepcopy()&lt;/code&gt;,logo o index 2 da vari√°vel &lt;code class=&quot;highlighter-rouge&quot;&gt;lista_1&lt;/code&gt; e da vari√°vel &lt;code class=&quot;highlighter-rouge&quot;&gt;lista_2&lt;/code&gt; s√£o diferentes.&lt;/p&gt;

&lt;p&gt;Espero que esse post tenha ficado simples e que voc√™ tenha entendido sobre refer√™ncia de objetos!&lt;/p&gt;

&lt;p&gt;Obrigada por ter lido &amp;lt;3&lt;/p&gt;

&lt;hr /&gt;</content><author><name>beatrizuezu</name></author><category term="blog" /><category term="vari√°vel" /><category term="mem√≥ria" /><category term="refer√™ncia de objetos" /><summary type="html">J√° aconteceu de voc√™ ter duas vari√°veis com os mesmos valores e alterar uma vari√°vel a outra tamb√©m √© alterada?</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/lista.jpg" /></entry><entry><title type="html">Entendendo map, filter, reduce e lambda</title><link href="http://localhost:4000/entendendo-map-filter-reduce-lambda/" rel="alternate" type="text/html" title="Entendendo map, filter, reduce e lambda" /><published>2019-09-29T00:00:00+02:00</published><updated>2019-09-29T00:00:00+02:00</updated><id>http://localhost:4000/entendendo-map-filter-reduce-lambda</id><content type="html" xml:base="http://localhost:4000/entendendo-map-filter-reduce-lambda/">&lt;p&gt;Antes de falar sobre map, filter e reduce, precisamos entender sobre &lt;strong&gt;fun√ß√£o de ordem superior&lt;/strong&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;fun√ß√£o-de-ordem-superior&quot;&gt;Fun√ß√£o de ordem superior&lt;/h2&gt;
&lt;p&gt;Fun√ß√£o de ordem superior √© uma fun√ß√£o que:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;recebe uma fun√ß√£o como argumento;&lt;/li&gt;
  &lt;li&gt;ou devolve uma fun√ß√£o como resultado.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Map, filter e reduce s√£o as fun√ß√µes de ordem superior mais conhecidas.&lt;/p&gt;

&lt;h2 id=&quot;map&quot;&gt;Map&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/map.png&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A fun√ß√£o map recebe uma fun√ß√£o (&lt;code class=&quot;highlighter-rouge&quot;&gt;dobrar_numero&lt;/code&gt;) e um iter√°vel (&lt;code class=&quot;highlighter-rouge&quot;&gt;range(4)&lt;/code&gt;), cada item desse iter√°vel (n√∫meros de 0 √† 3) √© aplicada na fun√ß√£o, o que faz o map retornar um objeto map e convertemos esse resultado em uma lista.&lt;/p&gt;

&lt;h2 id=&quot;filter&quot;&gt;Filter&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/filter.png&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A fun√ß√£o filter recebe uma fun√ß√£o (&lt;code class=&quot;highlighter-rouge&quot;&gt;maior_que_zero&lt;/code&gt;) e um iter√°vel (&lt;code class=&quot;highlighter-rouge&quot;&gt;valores&lt;/code&gt;), cada item do iter√°vel √© aplicada a condi√ß√£o da fun√ß√£o que faz o ‚Äúfiltro‚Äù, retornando tamb√©m um objeto filter e convertemos o resultado em uma lista&lt;/p&gt;

&lt;h2 id=&quot;reduce&quot;&gt;Reduce&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/reduce.png&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A ideia de usar o &lt;a href=&quot;https://docs.python.org/3.7/library/functools.html#functools.reduce&quot;&gt;reduce&lt;/a&gt; √© aplicar uma fun√ß√£o (&lt;code class=&quot;highlighter-rouge&quot;&gt;somar&lt;/code&gt;) a cada item de um iter√°vel (&lt;code class=&quot;highlighter-rouge&quot;&gt;range(5)&lt;/code&gt;, ou seja, n√∫meros de 0 √† 4) a fim de ser ‚Äúreduzida‚Äù a um √∫nico valor.&lt;/p&gt;

&lt;p&gt;√â poss√≠vel passar um terceiro par√¢metro opcional para inicializar o valor da fun√ß√£o:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/reduce-initializer.png&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;lambda&quot;&gt;Lambda&lt;/h2&gt;

&lt;p&gt;Fun√ß√£o lambda tamb√©m √© conhecida como fun√ß√£o an√¥nima, e √© comum vermos a fun√ß√£o lambda ser usada junto com map, filter ou reduce afim de encurtar as fun√ß√µes criadas pelo comando &lt;code class=&quot;highlighter-rouge&quot;&gt;def&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;map-e-lambda&quot;&gt;Map e lambda&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/map-lambda.png&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;filter-e-lambda&quot;&gt;Filter e lambda&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/filter-lambda.png&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;reduce-e-lambda&quot;&gt;Reduce e lambda&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/reduce-lambda.png&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;deixando-map-filter-e-reduce-mais-leg√≠veis&quot;&gt;Deixando map, filter e reduce mais leg√≠veis&lt;/h2&gt;

&lt;p&gt;Para tornar o c√≥digo mais leg√≠vel √© poss√≠vel substituir as fun√ß√µes map e filter por list comprehension e a fun√ß√£o reduce por &lt;code class=&quot;highlighter-rouge&quot;&gt;sum()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;all()&lt;/code&gt; e &lt;code class=&quot;highlighter-rouge&quot;&gt;any()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Como j√° diz no &lt;a href=&quot;https://www.python.org/dev/peps/pep-0020/&quot;&gt; Zen of Python&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Readability counts&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;list-comprehension&quot;&gt;List Comprehension&lt;/h3&gt;

&lt;h4 id=&quot;map-vs-list-comprehension&quot;&gt;map vs list comprehension&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/map-lambda.png&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;c√≥digo usando map&lt;/figcaption&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/listcomp-map.png&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;c√≥digo substituindo map por list comprehension&lt;/figcaption&gt;

&lt;h4 id=&quot;filter-vs-list-comprehension&quot;&gt;filter vs list comprehension&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/filter-lambda.png&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;c√≥digo usando filter&lt;/figcaption&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/listcomp-filter.png&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;c√≥digo substituindo filter por list comprehension&lt;/figcaption&gt;

&lt;h4 id=&quot;reduce-vs-sum-all-any&quot;&gt;reduce vs sum, all, any&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/reduce-lambda.png&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;c√≥digo usando filter&lt;/figcaption&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sum.png&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;c√≥digo substituindo reduce por sum&lt;/figcaption&gt;

&lt;p&gt;A fun√ß√£o &lt;code class=&quot;highlighter-rouge&quot;&gt;all()&lt;/code&gt; recebe um iter√°vel e se todos os elementos forem verdadeiros a fun√ß√£o retorna &lt;code class=&quot;highlighter-rouge&quot;&gt;True&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/all.png&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;figcaption class=&quot;caption&quot;&gt;exemplo de c√≥digo utilizando a fun√ß√£o all&lt;/figcaption&gt;

&lt;p&gt;A fun√ß√£o &lt;code class=&quot;highlighter-rouge&quot;&gt;any()&lt;/code&gt; recebe um iter√°vel e se algum elemento for verdadeiro a fun√ß√£o retorna &lt;code class=&quot;highlighter-rouge&quot;&gt;True&lt;/code&gt;
&lt;img src=&quot;/assets/images/any.png&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;exemplo de c√≥digo utilizando a fun√ß√£o any&lt;/figcaption&gt;

&lt;p&gt;Espero que esse post tenha ficado simples e que voc√™ tenha entendido sobre map, filter, reduce e lambda!&lt;/p&gt;

&lt;p&gt;Obrigada por ter lido &amp;lt;3&lt;/p&gt;

&lt;hr /&gt;</content><author><name>beatrizuezu</name></author><category term="blog" /><category term="python" /><category term="map" /><category term="filter" /><category term="reduce" /><category term="lambda" /><category term="list comprehension" /><summary type="html">Antes de falar sobre map, filter e reduce, precisamos entender sobre fun√ß√£o de ordem superior.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/lambda-icon.png" /></entry><entry><title type="html">Configurando o Atom para programar em Python</title><link href="http://localhost:4000/configurando-atom/" rel="alternate" type="text/html" title="Configurando o Atom para programar em Python" /><published>2019-09-22T00:00:00+02:00</published><updated>2019-09-22T00:00:00+02:00</updated><id>http://localhost:4000/configurando-atom</id><content type="html" xml:base="http://localhost:4000/configurando-atom/">&lt;p&gt;Editor bom √© aquele que voc√™ se sente mais produtiva para programar&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;atom&quot;&gt;Atom&lt;/h2&gt;
&lt;p&gt;O Atom √© um editor de texto open source desenvolvido pelo GitHub e constru√≠do com &lt;a href=&quot;https://github.com/electron/electron&quot;&gt;Electron&lt;/a&gt;. √â o editor que mais gosto de usar, j√° testei alguns, mas n√£o consegui me adaptar ou talvez me falte paci√™ncia e tempo para isso ¬Ø\_(„ÉÑ)_/¬Ø. Vou listar os plugins que uso:&lt;/p&gt;

&lt;h3 id=&quot;plugins&quot;&gt;Plugins&lt;/h3&gt;

&lt;h4 id=&quot;file-icons&quot;&gt;&lt;a href=&quot;https://atom.io/packages/file-icons&quot;&gt;file-icons&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/file-icons.png&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Gosto de usar esse plugin para os arquivos ficarem com √≠cones das extens√µes&lt;/p&gt;

&lt;h4 id=&quot;linter-flake8&quot;&gt;&lt;a href=&quot;https://atom.io/packages/linter-flake8&quot;&gt;linter-flake8&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/linter-flake8.gif&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Linter √© uma ferramenta de an√°lise de c√≥digo que acusa os erros sint√°ticos, ajuda bastante se voc√™ esquece de fechar &lt;code class=&quot;highlighter-rouge&quot;&gt;)&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;]&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt; (para evitar isso, se voc√™ abrir j√° fecha para n√£o correr o risco de fechar os par√™nteses, chaves, colchetes ou aspas), de colocar &lt;code class=&quot;highlighter-rouge&quot;&gt;:&lt;/code&gt; no final de algum comando entre outras coisas.&lt;/p&gt;

&lt;p&gt;Linter para python usando flake8, precisa instalar o flake8(&lt;code class=&quot;highlighter-rouge&quot;&gt;pip install flake8&lt;/code&gt;).&lt;/p&gt;

&lt;h4 id=&quot;linter&quot;&gt;&lt;a href=&quot;https://atom.io/packages/linter&quot;&gt;linter&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/linter.gif&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Esse plugin √© uma depend√™ncia do linter-flake8&lt;/p&gt;

&lt;h4 id=&quot;highlight-selected&quot;&gt;&lt;a href=&quot;https://atom.io/packages/highlight-selected&quot;&gt;highlight-selected&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/highlight-selected.gif&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ao dar um clique duplo em uma palavra, real√ßa as demais ocorr√™ncias&lt;/p&gt;

&lt;h4 id=&quot;sublime-style-column-selection&quot;&gt;&lt;a href=&quot;https://atom.io/packages/sublime-style-column-selection&quot;&gt;sublime-style-column-selection&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/column-selection.gif&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Possibilita selecionar multiplas linhas e selecionar um bloco de c√≥digo em cada linha. Isso √© nativo do sublime e lembro de ter isso tamb√©m no notepad++&lt;/p&gt;

&lt;h4 id=&quot;busy-signal&quot;&gt;&lt;a href=&quot;https://atom.io/packages/busy-signal&quot;&gt;busy-signal&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/busy-signal.gif&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Mostra que o pacote est√° executando alguma tarefa&lt;/p&gt;

&lt;h4 id=&quot;platformio-ide-terminal&quot;&gt;&lt;a href=&quot;https://atom.io/packages/platformio-ide-terminal&quot;&gt;platformio-ide-terminal&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/terminal.gif&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;terminal no editor&lt;/p&gt;

&lt;h4 id=&quot;autocomplete-python&quot;&gt;&lt;a href=&quot;https://atom.io/packages/autocomplete-python&quot;&gt;autocomplete-python&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/autocomplete-python.gif&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;o pr√≥prio nome j√° diz, rs&lt;/p&gt;

&lt;h4 id=&quot;python-isort&quot;&gt;&lt;a href=&quot;https://atom.io/packages/python-isort&quot;&gt;python-isort&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/isort.gif&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;deixa os imports na ordem certa&lt;/p&gt;</content><author><name>beatrizuezu</name></author><category term="blog" /><category term="atom" /><category term="ide" /><category term="python" /><category term="plugin" /><summary type="html">Editor bom √© aquele que voc√™ se sente mais produtiva para programar</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/atom.png" /></entry><entry><title type="html">Visualizando query SQL a partir do ORM Django</title><link href="http://localhost:4000/visualizando-query-sql-a-partir-do-orm-django/" rel="alternate" type="text/html" title="Visualizando query SQL a partir do ORM Django" /><published>2019-02-27T22:58:00+01:00</published><updated>2019-02-27T22:58:00+01:00</updated><id>http://localhost:4000/visualizando-query-sql-a-partir-do-orm-django</id><content type="html" xml:base="http://localhost:4000/visualizando-query-sql-a-partir-do-orm-django/">&lt;p&gt;Falei sobre esse assunto na palestra que fiz na TDC 2017 (The Developer‚Äôs Conference) e vou mostrar como visualizar query SQL do ORM do Django.&lt;/p&gt;

&lt;p&gt;Um dos motivos para falar sobre esse assunto foi a dificuldade que tive para entender como funcionava a ORM do Django. Em uma das minhas primeiras experi√™ncias com Django precisei gerar um relat√≥rio e como j√° tinha trabalhado com SQL resolvi fazer com SQL mesmo e posteriormente e passaria a query pra ORM pra entender. Uma maneira simples para o meu entendimento foi associar o que eu sabia de SQL para entender o ORM.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;orm-o-que&quot;&gt;ORM o que?&lt;/h2&gt;

&lt;p&gt;ORM significa Object Relational Mapper e √© uma biblioteca que automatiza a transfer√™ncia de dados do banco de dados relacional entre objetos do model. O legal de se usar √© que pode acelerar a velocidade do desenvolvimento permitindo ler, escrever, atualizar e deletar dados do banco, al√©m de ser compat√≠vel com diferentes banco de dados (MySQL, SQLite, PostgreSQL‚Ä¶) e ser nativa no Django.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/relacao-tabela-vs-classes.png&quot; alt=&quot;Rela√ß√£o tabela vs classes&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;https://www.fullstackpython.com/object-relational-mappers-orms.html&lt;/figcaption&gt;

&lt;h2 id=&quot;model-vs-tabela&quot;&gt;Model vs Tabela&lt;/h2&gt;

&lt;p&gt;Criei um exemplo (e voc√™ pode conferir nesse reposit√≥rio &lt;a href=&quot;https://github.com/beatrizuezu/de-sql-para-orm-django&quot;&gt;aqui&lt;/a&gt; e fazer na sua m√°quina para entender tamb√©m) para mostrar como fica no model e na tabela do banco de dados (estou usando mysql).&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;#categorias/model.py
class Categoria(models.Model):
    nome = models.CharField(&amp;#39;Nome&amp;#39;, max_length=128)&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/beatrizuezu/92faae7b82cbf932c3983e14e3717ea9.js&quot;&gt; &lt;/script&gt;

&lt;noscript&gt;&lt;pre&gt;#produtos/models.py
class Produto(models.Model):
    nome = models.CharField(
        &amp;#39;Nome&amp;#39;,
        max_length=128
    )
    valor = models.DecimalField(
        &amp;#39;Valor&amp;#39;,
        max_digits=10,
        decimal_places=2,
        blank=True,
        null=True
    )
    categoria = models.ForeignKey(Categoria, models.SET_NULL, null=True)
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/beatrizuezu/5ec77ef4799a3d1b5e8a178e5d9fa6de.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Enquanto no banco de dados temos:&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;mysql&amp;gt; desc categorias_categoria;
+-------+--------------+------+-----+---------+----------------+
| Field | Type         | Null | Key | Default | Extra          |
+-------+--------------+------+-----+---------+----------------+
| id    | int(11)      | NO   | PRI | NULL    | auto_increment |
| nome  | varchar(128) | NO   |     | NULL    |                |
+-------+--------------+------+-----+---------+----------------+
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/beatrizuezu/dfbe3a002291767f2e3d0d8b3ed3432b.js&quot;&gt; &lt;/script&gt;

&lt;noscript&gt;&lt;pre&gt;mysql&amp;gt; desc produtos_produto;
+--------------+---------------+------+-----+---------+----------------+
| Field        | Type          | Null | Key | Default | Extra          |
+--------------+---------------+------+-----+---------+----------------+
| id           | int(11)       | NO   | PRI | NULL    | auto_increment |
| nome         | varchar(128)  | NO   |     | NULL    |                |
| valor        | decimal(10,2) | YES  |     | NULL    |                |
| categoria_id | int(11)       | NO   | MUL | NULL    |                |
+--------------+---------------+------+-----+---------+----------------+
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/beatrizuezu/20a162167367e2fed3171404bc251c67.js&quot;&gt; &lt;/script&gt;

&lt;h2 id=&quot;como-funciona&quot;&gt;Como Funciona?&lt;/h2&gt;

&lt;p&gt;Tenho uma determinada ORM, vou utilizar essa abaixo como exemplo:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Produto.objects.all()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Vamos entender o fluxo para obtermos o script SQL:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/fluxo-script-sql.png&quot; alt=&quot;Fluxo para obtermos o script SQL&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;Fluxo parar obtermos o script SQL &lt;/figcaption&gt;

&lt;h3 id=&quot;model&quot;&gt;Model&lt;/h3&gt;
&lt;p&gt;√â a representa√ß√£o dos dados, cont√©m os campos e os m√©todos. No nosso exemplo, o nosso model √© Produto.&lt;/p&gt;

&lt;h3 id=&quot;manager&quot;&gt;Manager&lt;/h3&gt;
&lt;p&gt;O manager est√° acoplado ao Model, para acessar qualquer objeto salvo no banco √© preciso acessar o Manager, isto √© o objects presente em todo Model.&lt;/p&gt;

&lt;h3 id=&quot;queryset&quot;&gt;QuerySet&lt;/h3&gt;
&lt;p&gt;√â o conjunto de a√ß√µes quer ser√£o realizadas no banco (select, insert, update, delete). Representado pelo &lt;code class=&quot;highlighter-rouge&quot;&gt;all()&lt;/code&gt; no nosso exemplo.&lt;/p&gt;

&lt;h3 id=&quot;query&quot;&gt;Query&lt;/h3&gt;
&lt;p&gt;Cria uma estrutura de dados complexa com todos os elementos presentes em uma consulta. √â gerado uma representa√ß√£o SQL de um QuerySet, ou seja, √© atrav√©s desse m√©todo que conseguimos ver as convers√µes do ORM para SQL (MySQL, PostgreSQL, SQLite).&lt;/p&gt;

&lt;h3 id=&quot;sqlcompiler&quot;&gt;SQLCompiler&lt;/h3&gt;
&lt;p&gt;Recebe o SQL da Query e executa de acordo com as regras espec√≠ficas do backend escolhido.&lt;/p&gt;

&lt;h2 id=&quot;m√©todos&quot;&gt;M√©todos&lt;/h2&gt;
&lt;p&gt;Vou abordar alguns m√©todos da ORM, voc√™ pode visualizar todos os m√©todos &lt;a href=&quot;https://docs.djangoproject.com/en/dev/ref/models/querysets/&quot;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;all&quot;&gt;.all()&lt;/h3&gt;
&lt;p&gt;O m√©todo &lt;code class=&quot;highlighter-rouge&quot;&gt;.all()&lt;/code&gt; retornar√° todos os produtos.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;In [1]:from core.produtos.models import Produto
In [2]:Produto.objects.all()
Out [2]:&amp;lt;QuerySet [&amp;lt;Produto: Produto 1 da Categoria 1&amp;gt;,
&amp;lt;Produto: Produto 2 da Categoria 1&amp;gt;, &amp;lt;Produto: Produto 3 da Categoria 1&amp;gt;,
&amp;lt;Produto: Produto 4 da Categoria 1&amp;gt;, &amp;lt;Produto: Produto 5 da Categoria 1&amp;gt;,
&amp;lt;Produto: Produto 1 da Categoria 2&amp;gt;, &amp;lt;Produto: Produto 2 da Categoria 2&amp;gt;,
&amp;lt;Produto: Produto 3 da Categoria 2&amp;gt;, &amp;lt;Produto: Produto 4 da Categoria 2&amp;gt;,
&amp;lt;Produto: Produto 5 da Categoria 2&amp;gt;, &amp;lt;Produto: Produto 1 da Categoria 3&amp;gt;,
&amp;lt;Produto: Produto 2 da Categoria 3&amp;gt;, &amp;lt;Produto: Produto 3 da Categoria 3&amp;gt;,
&amp;lt;Produto: Produto 4 da Categoria 3&amp;gt;, &amp;lt;Produto: Produto 5 da Categoria 3&amp;gt;,
&amp;lt;Produto: Produto 1 da Categoria 4&amp;gt;, &amp;lt;Produto: Produto 2 da Categoria 4&amp;gt;,
&amp;lt;Produto: Produto 3 da Categoria 4&amp;gt;, &amp;lt;Produto: Produto 4 da Categoria 4&amp;gt;,
&amp;lt;Produto: Produto 5 da Categoria 4&amp;gt;, ‚Äò‚Ä¶(remaining elements truncated)‚Ä¶‚Äô]&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;e para visualizarmos o script SQL:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;In [3]: orm = Produto.objects.all()
In [4]: print(orm.query)
SELECT
  `produtos_produto`.`id`, `produtos_produto`.`nome`,
  `produtos_produto`.`valor`, `produtos_produto`.`categoria_id`
FROM `produtos_produto`
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;filter&quot;&gt;.filter()&lt;/h3&gt;
&lt;p&gt;O m√©todo &lt;code class=&quot;highlighter-rouge&quot;&gt;.filter()&lt;/code&gt; retornar√° todos os produtos em uma determinada condi√ß√£o.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;In [1]: from core.produtos.models import Produto
In [2]: Produto.objects.filter(id=1)
Out[2]: &amp;lt;QuerySet [&amp;lt;Produto: Produto 1 da Categoria 1&amp;gt;]&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;e para visualizarmos o script SQL:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;In [3]: orm = Produto.objects.filter(id=1)
In [4]: print(orm.query)
SELECT
  `produtos_produto`.`id`, `produtos_produto`.`nome`,
  `produtos_produto`.`valor`, `produtos_produto`.`categoria_id`
FROM `produtos_produto` WHERE `produtos_produto`.`id` = 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;filtercampo__lookup&quot;&gt;.filter(campo__lookup)&lt;/h3&gt;
&lt;p&gt;Podemos passar lookups quando utilizamos o &lt;code class=&quot;highlighter-rouge&quot;&gt;.filter()&lt;/code&gt;, voc√™ pode conferir todos os lookups &lt;a href=&quot;https://docs.djangoproject.com/en/dev/ref/models/querysets/#field-lookups&quot;&gt;aqui&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;In [1]: from core.produtos.models import Produto
In [2]: Produto.objects.filter(id__in=[1,3,5])
Out[2]: &amp;lt;QuerySet [&amp;lt;Produto: Produto 1 da Categoria 1&amp;gt;,
&amp;lt;Produto: Produto 3 da Categoria 1&amp;gt;, &amp;lt;Produto: Produto 5 da Categoria 1&amp;gt;]&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;e para visualizarmos o script:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;In [3]: orm = Produto.objects.filter(id__in=[1, 3 ,5])
In [4]: print(orm.query)
SELECT
  `produtos_produto`.`id`, `produtos_produto`.`nome`,
  `produtos_produto`.`valor`, `produtos_produto`.`categoria_id`
FROM `produtos_produto` WHERE `produtos_produto`.`id` IN (1, 3, 5)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;filterfk__campo&quot;&gt;.filter(fk__campo)&lt;/h3&gt;

&lt;p&gt;Conseguimos acessar o campo de uma chave estrangeira utilizando ORM:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;In [1]: from core.produtos.models import Produto
In [2]: Produto.objects.filter(categoria__nome='categoria_1')
Out[2]: &amp;lt;QuerySet [&amp;lt;Produto: Produto 1 da Categoria 1&amp;gt;,
&amp;lt;Produto: Produto 2 da Categoria 1&amp;gt;, &amp;lt;Produto: Produto 3 da Categoria 1&amp;gt;,
&amp;lt;Produto: Produto 4 da Categoria 1&amp;gt;, &amp;lt;Produto: Produto 5 da Categoria 1&amp;gt;]&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;visualizando em SQL:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;In [3]: orm = Produto.objects.filter(categoria__nome='categoria_1')
In [4]: print(orm.query)
SELECT
  `produtos_produto`.`id`, `produtos_produto`.`nome`,
  `produtos_produto`.`valor`, `produtos_produto`.`categoria_id`
FROM `produtos_produto`
INNER JOIN `categorias_categoria` ON (
  `produtos_produto`.`categoria_id` = `categorias_categoria`.`id`
)
WHERE `categorias_categoria`.`nome` = categoria_1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;o interessante √© que n√£o precisamos nos preocupar com os joins do SQL quando utilizamos ORM!&lt;/p&gt;

&lt;h3 id=&quot;get&quot;&gt;.get()&lt;/h3&gt;
&lt;p&gt;O m√©todo &lt;code class=&quot;highlighter-rouge&quot;&gt;.get()&lt;/code&gt; √© semelhante ao &lt;code class=&quot;highlighter-rouge&quot;&gt;.filter()&lt;/code&gt;, vamos entender as diferen√ßas posteriormente.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;In [1]: from core.produtos.models import Produto
In [2]: Produto.objects.get(id=1)
Out[2]: &amp;lt;Produto: Produto 1 da Categoria 1&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;visualizando em SQL:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;In [3]: orm = Produto.objects.get(id=1)
In [4]: print(orm.query)
 ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî
AttributeError Traceback (most recent call last)
&amp;lt;ipython-input-4‚Äì9d5bf753c2b6&amp;gt; in &amp;lt;module&amp;gt;()
 ‚Äî ‚Üí 1 print(script.query)
AttributeError: ‚ÄòProduto‚Äô object has no attribute ‚Äòquery‚Äô
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;EITA! Ca√≠mos em um erro. Isso ocorreu porque diferente do &lt;code class=&quot;highlighter-rouge&quot;&gt;.filter()&lt;/code&gt;, o &lt;code class=&quot;highlighter-rouge&quot;&gt;.get()&lt;/code&gt; n√£o retorna um queryset e sim o objeto do model.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;In [5]: script = Produto.objects.filter(id=1)
In [6]: type(script)
Out[6]: django.db.models.query.QuerySet
In [7]: script = Produto.objects.get(id=1)
In [8]: type(script)
Out[8]: core.produtos.models.Produto
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Mas ainda sim conseguimos visualizar o SQL dessa ORM:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;In [5]: from django.db import connection
In [6]: connection.queries
Out[6]: [{'sql':
'SELECT
  `produto_produto`.`id`, `produto_produto`.`nome`,
  `produto_produto`.`valor`, `produto_produto`.`categoria_id`
FROM `produto_produto`
WHERE `produto_produto`.`id` = 1',
'time': '0.000'}]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;exclude&quot;&gt;.exclude()&lt;/h3&gt;
&lt;p&gt;Esse m√©todo trar√° os objetos que n√£o correspondem aos par√¢metros fornecidos:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;In [1]: from core.produtos.models import Produto
In [2]: Produto.objects.exclude(id__gte=4)
Out[2]: &amp;lt;QuerySet [&amp;lt;Produto: Produto 1 da Categoria 1&amp;gt;,
&amp;lt;Produto: Produto 2 da Categoria 1&amp;gt;, &amp;lt;Produto: Produto 3 da Categoria 1&amp;gt;]&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;visualizando em SQL:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;In [3]: orm = Produto.objects.exclude(id__gte=4)
In [4]: print(orm.query)
SELECT
  `produtos_produto`.`id`, `produtos_produto`.`nome`,
  `produtos_produto`.`valor`, `produtos_produto`.`categoria_id`
FROM `produtos_produto` WHERE NOT (`produtos_produto`.`id` &amp;gt;= 4)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;values&quot;&gt;.values()&lt;/h3&gt;
&lt;p&gt;Com o &lt;code class=&quot;highlighter-rouge&quot;&gt;.values()&lt;/code&gt; podemos passar os campos que sejam retornados no queryset, al√©m disso a queryset retornar√° dicion√°rios.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;In [1]: from core.produtos.models import Produto
In [2]: Produto.objects.values(‚Äònome‚Äô, ‚Äòvalor‚Äô)
Out[2]: &amp;lt;QuerySet [
{‚Äòvalor‚Äô: Decimal(‚Äò2.00‚Äô), ‚Äònome‚Äô: ‚ÄòProduto 1 da Categoria 1‚Äô},
{‚Äòvalor‚Äô: Decimal(‚Äò5.00‚Äô), ‚Äònome‚Äô: ‚ÄòProduto 2 da Categoria 1‚Äô},
{‚Äòvalor‚Äô: Decimal(‚Äò20.00‚Äô), ‚Äònome‚Äô: ‚ÄòProduto 3 da Categoria 1‚Äô},
{‚Äòvalor‚Äô: Decimal(‚Äò15.00‚Äô), ‚Äònome‚Äô: ‚ÄòProduto 4 da Categoria 1‚Äô},
{‚Äòvalor‚Äô: Decimal(‚Äò10.00‚Äô), ‚Äònome‚Äô: ‚ÄòProduto 5 da Categoria 1‚Äô},
{‚Äòvalor‚Äô: Decimal(‚Äò5.00‚Äô), ‚Äònome‚Äô: ‚ÄòProduto 1 da Categoria 2‚Äô},
{‚Äòvalor‚Äô: Decimal(‚Äò7.00‚Äô), ‚Äònome‚Äô: ‚ÄòProduto 2 da Categoria 2‚Äô},
{‚Äòvalor‚Äô: Decimal(‚Äò20.00‚Äô), ‚Äònome‚Äô: ‚ÄòProduto 3 da Categoria 2‚Äô},
‚Äò‚Ä¶(remaining elements truncated)‚Ä¶‚Äô]&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;visualizando em SQL:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;In [3]: orm = Produto.objects.values(‚Äònome‚Äô, ‚Äòvalor‚Äô)
In [4]: print(orm.query)
SELECT
  `produtos_produto`.`nome`, `produtos_produto`.`valor`
FROM `produtos_produto`
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;values_list&quot;&gt;.values_list()&lt;/h3&gt;
&lt;p&gt;Similar ao &lt;code class=&quot;highlighter-rouge&quot;&gt;.values()&lt;/code&gt;, a diferen√ßa √© que a queryset retorna tupla.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;In [1]: from core.produtos.models import Produto
In [2]: Produto.objects.values_list(‚Äònome‚Äô)
Out[2]: &amp;lt;QuerySet [
(‚ÄòProduto 1 da Categoria 1‚Äô,), (‚ÄòProduto 2 da Categoria 1‚Äô,),
(‚ÄòProduto 3 da Categoria 1‚Äô,), (‚ÄòProduto 4 da Categoria 1‚Äô,),
(‚ÄòProduto 5 da Categoria 1‚Äô,), (‚ÄòProduto 1 da Categoria 2‚Äô,),
(‚ÄòProduto 2 da Categoria 2‚Äô,), (‚ÄòProduto 3 da Categoria 2‚Äô,),
(‚ÄòProduto 4 da Categoria 2‚Äô,),‚Äô‚Ä¶(remaining elements truncated)‚Ä¶‚Äô]&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Visualizando em SQL:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;In [3]: orm = Produto.objects.values_list(‚Äònome‚Äô)
In [4]: print(orm.query)
SELECT
  `produtos_produto`.`nome`
FROM `produtos_produto`
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;values_listfield-flattrue&quot;&gt;.values_list(field, flat=True)&lt;/h3&gt;
&lt;p&gt;Quando utilizamos o flat=True como param√™tro do &lt;code class=&quot;highlighter-rouge&quot;&gt;.values_list()&lt;/code&gt; o resultado s√£o retornado em valores √∫nicos ao em vez de tuplas.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;In [1]: from core.produtos.models import Produto
In [2]: Produto.objects.values_list(‚Äònome‚Äô, flat=True)
Out[2]:&amp;lt;QuerySet [‚ÄòProduto 1 da Categoria 1‚Äô, ‚ÄòProduto 2 da Categoria 1‚Äô,
‚ÄòProduto 3 da Categoria 1‚Äô, ‚ÄòProduto 4 da Categoria 1‚Äô,
‚ÄòProduto 5 da Categoria 1‚Äô, ‚ÄòProduto 1 da Categoria 2‚Äô,
‚ÄòProduto 2 da Categoria 2‚Äô, ‚ÄòProduto 3 da Categoria 2‚Äô,
‚ÄòProduto 4 da Categoria 2‚Äô, ‚ÄòProduto 5 da Categoria 2‚Äô,
‚ÄòProduto 1 da Categoria 3‚Äô, ‚ÄòProduto 2 da Categoria 3‚Äô,
‚Äò‚Ä¶(remaining elements truncated)‚Ä¶‚Äô]&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Visualizando em SQL:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;In [3]: orm = Produto.objects.values_list(‚Äònome‚Äô, flat=True)
In [4]: print(orm.query)
SELECT
  `produtos_produto`.`nome`
FROM `produtos_produto`
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;annotate&quot;&gt;.annotate()&lt;/h3&gt;
&lt;p&gt;Retorna um queryset agrupado levando em considera√ß√£o cada objeto.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;In [1]: from core.produtos.models import Produto
In [2]: from django.db.models import Sum
In [3]: Produto.objects.values(‚Äòcategoria‚Äô).annotate(Sum(‚Äòvalor‚Äô))
Out[3]: &amp;lt;QuerySet [{‚Äòvalor__sum‚Äô: Decimal(‚Äò52.00‚Äô), ‚Äòcategoria‚Äô: 1},
{‚Äòvalor__sum‚Äô: Decimal(‚Äò66.00‚Äô), ‚Äòcategoria‚Äô: 2},
{‚Äòvalor__sum‚Äô: Decimal(‚Äò147.60‚Äô), ‚Äòcategoria‚Äô: 3},
{‚Äòvalor__sum‚Äô: Decimal(‚Äò209.30‚Äô), ‚Äòcategoria‚Äô: 4},
{‚Äòvalor__sum‚Äô: Decimal(‚Äò87.20‚Äô), ‚Äòcategoria‚Äô: 5}]&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;No exemplo acima foi agrupado a soma de todas as categorias dos produtos.&lt;/p&gt;

&lt;p&gt;Visualizando em SQL:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;In [4]: orm = Produto.objects.values(‚Äòcategoria‚Äô).annotate(Sum(‚Äòvalor‚Äô))
In [5]: print(orm.query)
SELECT
  `produtos_produto`.`categoria_id`,
  SUM(`produtos_produto`.`valor`) AS `valor__sum`
FROM `produtos_produto`
GROUP BY `produtos_produto`.`categoria_id` ORDER BY NULL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;aggregate&quot;&gt;.aggregate()&lt;/h3&gt;
&lt;p&gt;Semelhante ao &lt;code class=&quot;highlighter-rouge&quot;&gt;.annotate()&lt;/code&gt; com a diferen√ßa de retornar um dicion√°rio com valores agregados calculado sobre todo o queryset&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;In [1]: from core.produtos.models import Produto
In [2]: from django.db.models import Avg, Max, Min
In [3]: Produto.objects.aggregate(
   ...: valor_maximo=Max('valor'),
   ...: valor_minimo=Min('valor'),
   ...: valor_medio=Avg('valor')
   ...: )
Out[3]:
{'valor_maximo': Decimal('100.00'),
 'valor_medio': 22.484,
 'valor_minimo': Decimal('2.00')}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Visualizando SQL:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;In [4]: orm = Produto.objects.aggregate(
 ‚Ä¶: valor_maximo=Max(‚Äòvalor‚Äô),
 ‚Ä¶: valor_minimo=Min(‚Äòvalor‚Äô),
 ‚Ä¶: valor_medio=Avg(‚Äòvalor‚Äô)
 ‚Ä¶: )
In [5]: print(orm.query)
 ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî -
AttributeError Traceback (most recent call last)
&amp;lt;ipython-input-5‚Äì02ba74239328&amp;gt; in &amp;lt;module&amp;gt;()
 ‚Äî ‚Üí 1 print(orm.query)
AttributeError: ‚Äòdict‚Äô object has no attribute ‚Äòquery‚Äô
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ca√≠mos no erro novamente, o &lt;code class=&quot;highlighter-rouge&quot;&gt;.aggregate()&lt;/code&gt; n√£o retona um queryset.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;In [4]: orm = Produto.objects.values(‚Äòcategoria‚Äô).annotate(Sum(‚Äòvalor‚Äô))
In [5]: type(orm)
Out[5]: django.db.models.query.QuerySet
In [6]: orm = Produto.objects.aggregate(
 ‚Ä¶: valor_maximo=Max(‚Äòvalor‚Äô),
 ‚Ä¶: valor_minimo=Min(‚Äòvalor‚Äô),
 ‚Ä¶: valor_medio=Avg(‚Äòvalor‚Äô)
 ‚Ä¶: )
In [7]: type(orm)
Out[7]: dict
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Assim como &lt;code class=&quot;highlighter-rouge&quot;&gt;.get()&lt;/code&gt; tamb√©m conseguimos visualizar a query SQL:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;In [4]: from django.db import connection
In [5]: connection.queries
Out[5]:
[{‚Äòsql‚Äô: ‚ÄòSELECT
  MAX(`produtos_produto`.`valor`) AS `valor_maximo`,
  AVG(`produtos_produto`.`valor`) AS `valor_medio`,
  MIN(`produtos_produto`.`valor`) AS `valor_minimo`
FROM `produtos_produto`‚Äô,
 ‚Äòtime‚Äô: ‚Äò0.000‚Äô}]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;queryset-s√£o-lazy&quot;&gt;QuerySet s√£o Lazy&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Todos os m√©todos que retornam um QuerySet&lt;/strong&gt; s√£o considerados lazy.&lt;/p&gt;

&lt;p&gt;Se eu tiver essas consultas abaixo, quantas consultas foram realizadas no banco de dados?&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;In [1]: from core.produtos.models import Produto
In [2]: produtos = Produto.objects.all()
In [3]: categoria_2 = produtos.filter(categoria=2)
In [4]: lista_produto = produtos.values_list(‚Äònome‚Äô, flat=True)
In [5]: print(lista_produto)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;APENAS UMA!&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;In [1]: from core.produtos.models import Produto
In [2]: from django.db import connection
In [3]: produtos = Produto.objects.all()
In [4]: categoria_2 = produtos.filter(categoria=2)
In [5]: lista_produto = produtos.values_list(‚Äònome‚Äô, flat=True)
In [6]: print(len(connection.queries))
0
In [7]: print(lista_produto)
&amp;lt;QuerySet [‚ÄòProduto 1 da Categoria 1‚Äô, ‚ÄòProduto 2 da Categoria 1‚Äô,
‚ÄòProduto 3 da Categoria 1‚Äô, ‚ÄòProduto 4 da Categoria 1‚Äô,
‚ÄòProduto 5 da Categoria 1‚Äô, ‚ÄòProduto 1 da Categoria 2‚Äô,
‚ÄòProduto 2 da Categoria 2‚Äô, ‚ÄòProduto 3 da Categoria 2‚Äô,
‚ÄòProduto 4 da Categoria 2‚Äô, ‚ÄòProduto 5 da Categoria 2‚Äô,
‚ÄòProduto 1 da Categoria 3‚Äô, ‚ÄòProduto 2 da Categoria 3‚Äô,
‚ÄòProduto 3 da Categoria 3‚Äô, ‚ÄòProduto 4 da Categoria 3‚Äô,
‚ÄòProduto 5 da Categoria 3‚Äô, ‚ÄòProduto 1 da Categoria 4‚Äô,
‚ÄòProduto 2 da Categoria 4‚Äô, ‚ÄòProduto 3 da Categoria 4‚Äô,
‚ÄòProduto 4 da Categoria 4‚Äô, ‚ÄòProduto 5 da Categoria 4‚Äô,
‚Äò‚Ä¶(remaining elements truncated)‚Ä¶‚Äô]&amp;gt;
In [8]: print(len(connection.queries))
1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Isso significa que as consulta s√£o realizadas no banco de dados quando pedimos. Mas quando pedimos?&lt;/p&gt;

&lt;p&gt;Podemos pedir para serem executadas nas seguintes formas:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Quando solicitamos somente um resultado:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt; Produto.objects.all()[0]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Quando fazemos um slicinf passando um ‚Äústep‚Äù:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt; Produtos.objects.all()[::2]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Quando iteramos:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt; categoria for categoria in Categoria.objects.all()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Quando chamamos o m√©todo len() :&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt; len(Produto.objects.all())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Quando chamamos um list() :&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt; list(Produto.objects.all())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Quando chamamos um bool() :&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt; bool(Produto.objects.all())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Quando chamamos o repr() :&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt; repr(Produto.objects.all())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;dicas&quot;&gt;DICAS&lt;/h2&gt;

&lt;h3 id=&quot;reset_queries&quot;&gt;reset_queries&lt;/h3&gt;
&lt;p&gt;Se precisar limpar a lista de query do connection, utilize:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;from django.db import reset_queries
&amp;gt;&amp;gt; reset_queries()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;django-logging&quot;&gt;Django logging&lt;/h3&gt;
&lt;p&gt;Caso queira que a query sql apare√ßa toda vez que seja executada uma consulta orm, adicione ao arquivo &lt;code class=&quot;highlighter-rouge&quot;&gt;settings.py&lt;/code&gt;&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;...

LOGGING = {
    &amp;#39;version&amp;#39;: 1,
    &amp;#39;disable_existing_loggers&amp;#39;: False,
    &amp;#39;handlers&amp;#39;: {
        &amp;#39;console&amp;#39;: {
            &amp;#39;class&amp;#39;: &amp;#39;logging.StreamHandler&amp;#39;,
        },
    },
    &amp;#39;loggers&amp;#39;: {
        &amp;#39;django&amp;#39;: {
            &amp;#39;handlers&amp;#39;: [&amp;#39;console&amp;#39;],
            &amp;#39;level&amp;#39;: &amp;#39;DEBUG&amp;#39;,
        },
    },
}&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/beatrizuezu/deb68f559403ab9c0ad709c991d3e496.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Espero que tenha ajudado a entender um pouco sobre ORM Django :)&lt;/p&gt;

&lt;p&gt;Obrigada ‚ù§&lt;/p&gt;

&lt;p&gt;esse post foi originalmente escrito no &lt;a href=&quot;https://medium.com/@beatrizuezu/visualizando-query-sql-a-partir-do-orm-django-5771370a9c55&quot;&gt;Medium&lt;/a&gt; no dia 07/08/2017&lt;/p&gt;</content><author><name>beatrizuezu</name></author><category term="blog" /><category term="django" /><category term="orm" /><category term="sql" /><summary type="html">Falei sobre esse assunto na palestra que fiz na TDC 2017 (The Developer‚Äôs Conference) e vou mostrar como visualizar query SQL do ORM do Django.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/relacao-tabela-vs-classes.png" /></entry><entry><title type="html">PyLadies &amp;amp; Django Girls: do medo ao incentivo</title><link href="http://localhost:4000/pyladies-e-django-girls-do-medo-ao-incentivo/" rel="alternate" type="text/html" title="PyLadies &amp; Django Girls: do medo ao incentivo" /><published>2018-03-16T22:44:00+01:00</published><updated>2018-03-16T22:44:00+01:00</updated><id>http://localhost:4000/pyladies-e-django-girls-do-medo-ao-incentivo</id><content type="html" xml:base="http://localhost:4000/pyladies-e-django-girls-do-medo-ao-incentivo/">&lt;p&gt;Na √©poca que fazia faculdade gostava de mexer com HTML e CSS at√© que eu cheguei a estagiar como Front-End. Chegou um momento do est√°gio que eu n√£o me via naquilo e queria entrar na √°rea de Banco de dados e Big Data. Como eu gostava de ler sobre o tema de Big Data ouvia falar sobre as linguagens Python e Java. Por√©m tinha dificuldade em programar e achava dif√≠cil, s√≥ queria entrar em Banco de Dados e Big Data porque n√£o iria programar. (Sabe de nada, inocente).&lt;/p&gt;

&lt;p&gt;Foi a√≠ que eu decidi a procurar vagas de Banco de Dados e at√© que comecei a trabalhar com desenvolvimento de software com a linguagem VB.net e SQL Server. Tive medo de ser demitida nos primeiros meses por n√£o saber a programar, achava que precisava documentar tudo e fiquei surpresa por terem me colocado em um projeto em menos de 3 meses. Corri atr√°s de cursos de orienta√ß√£o a objetos para entender melhor o c√≥digo.&lt;/p&gt;

&lt;p&gt;Consegui me formar na faculdade e uns meses depois comecei a estudar uma nova linguagem: Ruby On Rails. Ainda acho a linguagem bem legal, naquela √©poca estava empolgada com o mundo novo, mesmo tendo estagiado como Front-end, eu estava aprendendo termos novos de Back-end e ferramentas novas!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/grupo-estudo-ruby.png&quot; alt=&quot;Grupo de estudos de Ruby on Rails&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;Grupo de estudos de Ruby on Rails&lt;/figcaption&gt;

&lt;p&gt;Comecei a procurar mais sobre a comunidade de Ruby. Acabei caindo num evento que seria no final do m√™s de novembro (de 2015), por√©m tinha que me inscrever e j√° estavam encerradas as inscri√ß√µes :( . Fiquei chateada por n√£o ter pesquisado antes e por n√£o poder participar do evento. Continuei a pesquisar pela internet e por coincid√™ncia ia ter no mesmo dia o evento de Ruby um curso de Python! Fiz logo a minha inscri√ß√£o para participar do curso b√°sico de Python. E foi assim que eu conheci o PyLadies S√£o Paulo ‚ù§. Uhuuul, iria fazer um curso de Python, mais uma linguagem que eu iria conhecer. Estava empolgada para o dia, mesmo tendo que acordar cedo em um s√°bado de manh√£ e ficar o dia todo codando.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cat-typing.gif&quot; alt=&quot;gatinho codando&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;No dia do curso entrei t√≠mida na sala, sentei ao lado de uma mo√ßa e fiquei na minha. Durante o exerc√≠cios propostos, percebia que a mo√ßa tinha um pouco de dificuldade e como j√° tinha uma no√ß√£o de programa√ß√£o por conta do trabalho, passei a ajud√°-la com a sintaxe que eu tamb√©m desconhecia. Ainda lembro do que eu senti quando comecei a reparar nas pessoas que estavam ao meu redor, nas pessoas que estavam participando do curso, nas que estavam ajudando na monitoria e nas que organizaram tudo aquilo. Senti uma sensa√ß√£o t√£o boa que eu queria tamb√©m fazer parte daquilo e poder ajudar com o pouco do que eu sabia e fazer trabalho volunt√°rio.&lt;/p&gt;

&lt;p&gt;No final do curso cheguei pra Pat e perguntei como fazia para ser monitora do pr√≥ximo curso. A mo√ßa que eu ajudei ouviu o meu coment√°rio e acabou por me elogiar. Coincidentemente ela conhecia a Alini que havia ministrado a aula.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/curso-iniciante-python.jpeg&quot; alt=&quot;Curso iniciante de Python pelo PyLadies S√£o Paulo&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;Curso Iniciante de Python pelo PyLadies S√£o Paulo&lt;/figcaption&gt;

&lt;p&gt;No primeiro curso do ano de 2016 fui umas das monitoras. Acabei conhecendo outras monitoras que tamb√©m foram alunas. Nem parecia que era a primeira vez que nos encontr√°vamos, parecia que nos conhec√≠amos h√° muito tempo. Ser monitora me ensinou que &lt;strong&gt;o pouco que eu sei pode ser muito para quem n√£o sabe&lt;/strong&gt; e de n√£o ter vergonha de falar &lt;strong&gt;eu tamb√©m n√£o sei, vamos pesquisar?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/as-monitoras.jpeg&quot; alt=&quot;As monitoras - Alini, eu, Carol, Ariadyne, √âlida, Pat&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;As monitoras (Alini, eu, Carol, Ariadyne, √âlida, Pat)&lt;/figcaption&gt;

&lt;p&gt;Para o curso seguinte brinquei que poderia dar a aula, pois tinha gostado muito de ter sido monitora, e as meninas da organiza√ß√£o levaram a s√©rio, rs. Ent√£o elas me chamaram para dar o segundo curso de iniciante. Aceitei na hora! Foi a minha primeira experi√™ncia em lecionar para um monte de gente! √â claro que fiquei nervosa e ansiosa no dia anterior, fiquei treinando os slides e pensando no modo que eu poderia explicar, com receio de falar algo errado ou das meninas n√£o entenderem nada do que eu estava falando, ainda mais quando eu via que elas olhavam com uma cara de interroga√ß√£o para a tela. Da√≠ foi chegar junto e ver se a menina estava concentrada ou realmente com d√∫vida, nem sempre elas falam que n√£o est√£o entendendo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/beatriz-ensinando.jpeg&quot; alt=&quot;Beatriz ensinando&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nunca pensei que pudesse ensinar tantas pessoas juntas dentro de um √∫nica sala de aula. No t√©rmino da aula sa√≠ super feliz com a sensa√ß√£o de um dever cumprido e de quebrar uma barreira: falar em p√∫blico.&lt;/p&gt;

&lt;p&gt;Fazer parte do PyLadies n√£o √© apenas aprender, ensinar e conversar sobre Python. √â tamb√©m conhecer outras meninas incr√≠veis que se interessam em programa√ß√£o e poder falar sobre qualquer assunto! √â uma irmandade ‚ù§&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/amigas-meetup.jpeg&quot; alt=&quot;Amigas no meetup&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;Eliete, Roberta, Carol, Duda, eu, Alini&lt;/figcaption&gt;

&lt;p&gt;Em umas das conversas com a Alini sobre frameworks, comentei que poderia ter um Django Girls em S√£o Paulo e ela dizia: ‚ÄòPor que voc√™ n√£o tenta organizar ? ‚Äò, da√≠ eu ficava pensativa por n√£o conhecer o framework e nem saber mexer com Django. Eu estava t√£o envolvida com a comunidade Python que eu decidi sair da minha zona de conforto e comecei a procurar vagas de Python. Pouco tempo depois fui contratada para trabalhar com Django!&lt;/p&gt;

&lt;p&gt;Olhar para o ano de 2016 e perceber o que eu fiz na comunidade me permitiu muitas experi√™ncias novas: palestrei na TDC (The Developer Conference) e no RoadSec, fui para a Python Brasil em Florian√≥polis, participei do Django Girls Rio de Janeiro para trazer o Django Girls para S√£o Paulo e conheci pessoas incr√≠veis nesse tempo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/palestra-tdc.jpeg&quot; alt=&quot;Palestra na The Developer Conferece&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;Palestra na The Developer Conferece
&lt;/figcaption&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/pyladies-roadsec.jpeg&quot; alt=&quot;PyLadies S√£o Paulo, Campinas e S√£o Carlos na RoadSec&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;PyLadies S√£o Paulo, Campinas e S√£o Carlos na RoadSec&lt;/figcaption&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/pyladies-sp-python-br.jpeg&quot; alt=&quot;PyLadies S√£o Paulo na Python Brasil&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;PyLadies S√£o Paulo na Python Brasil&lt;/figcaption&gt;

&lt;p&gt;Hoje sou uma das organizadoras do Django Girls S√£o Paulo e a quantidade de inscri√ß√µes que recebemos ( 369 inscri√ß√µes!!) para o primeiro workshop n√£o imaginava que o evento tomaria essa propor√ß√£o. N√£o foi f√°cil selecionar as participantes, os treinadores e correr atr√°s de patroc√≠nios. N√£o tenho palavras que descrevem o qu√£o gratificante foi ver as meninas saindo com o sorriso no rosto, incentivadas a investir na √°rea, comemorando a cada acerto e cada dificuldade superada. O primeiro Django Girls S√£o Paulo me mostrou que eu sou capaz de ajudar e transformar a vida de outras pessoas com um simples ato.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/dg-1.jpeg&quot; alt=&quot;Primeiro Django Girls S√£o Paulo&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;#1 Django Girls S√£o Paulo ‚ù§&lt;/figcaption&gt;

&lt;p&gt;Um pouco mais de um ano, fui de aluna para a co-organiza√ß√£o do PyLadies S√£o Paulo e Django Girls S√£o Paulo, esse texto √© para contar um pouco da minha trajet√≥ria na programa√ß√£o e na comunidade Python. Tamb√©m √© a forma que encontrei para agradecer √† coordena√ß√£o do PyLadies e do Django Girls por terem acreditado em mim e no meu trabalho dentro da comunidade, cada pessoa que pude ajudar, incentivar, que me ajudou a chegar at√© aqui e a voc√™ que leu esse texto.&lt;/p&gt;

&lt;p&gt;Obrigada ‚ù§&lt;/p&gt;

&lt;p&gt;esse post foi originalmente escrito no &lt;a href=&quot;https://medium.com/@beatrizuezu/pyladies-django-girls-do-medo-ao-incentivo-e23c0f8bad38&quot;&gt;Medium&lt;/a&gt; no dia 28/03/2017&lt;/p&gt;</content><author><name>beatrizuezu</name></author><category term="blog" /><category term="pyladies" /><category term="django girls" /><category term="comunidade" /><category term="ensinar" /><category term="incentivar" /><summary type="html">Na √©poca que fazia faculdade gostava de mexer com HTML e CSS at√© que eu cheguei a estagiar como Front-End. Chegou um momento do est√°gio que eu n√£o me via naquilo e queria entrar na √°rea de Banco de dados e Big Data. Como eu gostava de ler sobre o tema de Big Data ouvia falar sobre as linguagens Python e Java. Por√©m tinha dificuldade em programar e achava dif√≠cil, s√≥ queria entrar em Banco de Dados e Big Data porque n√£o iria programar. (Sabe de nada, inocente).</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/dg-1.jpeg" /></entry></feed>