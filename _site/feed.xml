<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2021-12-11T22:33:28+01:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Beatriz Uezu Page</title><subtitle>A blog about technology and stuff related</subtitle><entry><title type="html">[EN] Design Patterns Series</title><link href="http://localhost:4000/en-design-patterns-serie/" rel="alternate" type="text/html" title="[EN] Design Patterns Series" /><published>2021-12-11T00:00:00+01:00</published><updated>2021-12-11T00:00:00+01:00</updated><id>http://localhost:4000/en-design-patterns-serie</id><content type="html" xml:base="http://localhost:4000/en-design-patterns-serie/">&lt;p&gt;Let‚Äôs understand what it‚Äôs design patterns first :)&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;design-patterns&quot;&gt;Design Patterns&lt;/h1&gt;
&lt;p&gt;The Design patterns concept was introduced by GoF (Gang of Four) on the book &lt;strong&gt;Design Patterns: Elements of Reusable Object-Oriented Software&lt;/strong&gt;. Design Patterns are solutions for certain software problems.&lt;/p&gt;

&lt;p&gt;The book shows 23 design patterns and they are classified into 3 categories.&lt;/p&gt;

&lt;h2 id=&quot;classification&quot;&gt;Classification&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Creational pattern;&lt;/li&gt;
  &lt;li&gt;Structural pattern;&lt;/li&gt;
  &lt;li&gt;Behavioral pattern;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;creational-pattern&quot;&gt;Creational Pattern&lt;/h3&gt;

&lt;p&gt;It provides object creational mechanisms to rise the code flexibility and reusability, such as:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;works with the base on the mode the objects can be created;&lt;/li&gt;
  &lt;li&gt;isolates the object creation details;&lt;/li&gt;
  &lt;li&gt;the code is independent of the object type to be created.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example: Singleton&lt;/p&gt;

&lt;h3 id=&quot;structural-pattern&quot;&gt;Structural Pattern&lt;/h3&gt;

&lt;p&gt;It provides how to assemble objects and classes into larger structures, while still keeping flexible and efficient structures, such as:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;determines the design of objects and class structures to be composed and to reach a wide result;&lt;/li&gt;
  &lt;li&gt;the focus is to simplify the structure and identify the relationship between classes and objects&lt;/li&gt;
  &lt;li&gt;it focuses on heritage and class composition;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example: Adapter&lt;/p&gt;

&lt;h3 id=&quot;behavioral-pattern&quot;&gt;Behavioral Pattern&lt;/h3&gt;

&lt;p&gt;It ensures efficiet comunication and identification of responsability between objects, such as:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;it‚Äôs concerned about the interaction between objects and their responsibilities;&lt;/li&gt;
  &lt;li&gt;the objects might be able to interact and therefore, they have to have loose coupling&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example: Observer&lt;/p&gt;

&lt;p&gt;Thank you for reading &amp;lt;3&lt;/p&gt;

&lt;hr /&gt;</content><author><name>beatrizuezu</name></author><category term="blog" /><category term="design patterns" /><summary type="html">Let‚Äôs understand what it‚Äôs design patterns first :)</summary></entry><entry><title type="html">Padr√µes de Projetos S√©rie</title><link href="http://localhost:4000/pt-padroes-de-projeto-serie/" rel="alternate" type="text/html" title="Padr√µes de Projetos S√©rie" /><published>2021-12-11T00:00:00+01:00</published><updated>2021-12-11T00:00:00+01:00</updated><id>http://localhost:4000/pt-padroes-de-projeto-serie</id><content type="html" xml:base="http://localhost:4000/pt-padroes-de-projeto-serie/">&lt;p&gt;Vamos entender o que √© Padr√µes de Projetos :)&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;padr√µes-de-projeto-design-patterns&quot;&gt;Padr√µes de projeto (Design Patterns)&lt;/h1&gt;

&lt;p&gt;Padr√µes de projetos s√£o solu√ß√µes t√≠picas para problemas comuns em projeto de software. Podemos fazer uma analogia com uma planta de obras, podemos ver o resultado e as funcionalidades, mas precisamos fazer a implemeta√ß√£o.&lt;/p&gt;

&lt;p&gt;O conceito de padr√µes de projeto foi apresentado pela GoF (Gang of Four, ou Gangue dos Quatro) no livro Padr√µes de Projeto - Solu√ß√µes Reutiliz√°veis de Software Orientado a Objetos.&lt;/p&gt;

&lt;h2 id=&quot;classifica√ß√£o&quot;&gt;Classifica√ß√£o&lt;/h2&gt;

&lt;p&gt;O livro do GoF mostra 23 padr√µes de projetos, e s√£o classificados em:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;padr√µes de cria√ß√£o;&lt;/li&gt;
  &lt;li&gt;padr√µes estruturais;&lt;/li&gt;
  &lt;li&gt;padr√µes comportamentais.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;padr√µes-de-cria√ß√£o&quot;&gt;Padr√µes de cria√ß√£o&lt;/h3&gt;

&lt;p&gt;Fornecem mecanismos de cria√ß√£o de objetos que aumetnam a flexibilidade e a reutiliza√ß√£o de c√≥digo, como:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;funcionam com base no modo como os objetos podem ser criados;&lt;/li&gt;
  &lt;li&gt;isolam os detalhes da cria√ß√£o dos objetos&lt;/li&gt;
  &lt;li&gt;o c√≥digo √© independente do tipo do objeto a ser criado.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Exemplo: padr√£o Singleton.&lt;/p&gt;

&lt;h3 id=&quot;padr√µes-estruturais&quot;&gt;Padr√µes estruturais&lt;/h3&gt;

&lt;p&gt;Explicam como montar objetos e classes em estruturas maiores, enquanto ainda mant√©m as estruturas flex√≠veis e eficientes, como:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;determinam o design da estrutura de objetos e classes para que estes possam ser compostos e resultados mais amplos sejam alcan√ßados;&lt;/li&gt;
  &lt;li&gt;o foco est√° em simplificar a estrutura e identificar o relacionamento entre classes e objetos;&lt;/li&gt;
  &lt;li&gt;est√£o centrados em heran√ßas e composi√ß√£o de classes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Exemplo: padr√£o Adapter (Adaptador)&lt;/p&gt;

&lt;h3 id=&quot;padr√µes-comportamentais&quot;&gt;Padr√µes comportamentais&lt;/h3&gt;

&lt;p&gt;Cuidam da comunica√ß√£o eficiente e da indica√ß√£o de responsabilidade entre objetos, como:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;est√£o preocupados com a intera√ß√£o entre os objetos e suas responsabilidades;&lt;/li&gt;
  &lt;li&gt;os objetos devem ser capazes de interagir e, mesmo assim, devem ter baixo acoplamento.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Exemplo: padr√£o Observer (Observador)&lt;/p&gt;

&lt;p&gt;Obrigada por ter lido &amp;lt;3&lt;/p&gt;</content><author><name>beatrizuezu</name></author><category term="blog" /><category term="padr√µes de projetos" /><summary type="html">Vamos entender o que √© Padr√µes de Projetos :)</summary></entry><entry><title type="html">[EN] Kubernetes Notes - Part 2</title><link href="http://localhost:4000/kubernetes-notes-part-2/" rel="alternate" type="text/html" title="[EN] Kubernetes Notes - Part 2" /><published>2021-11-07T00:00:00+01:00</published><updated>2021-11-07T00:00:00+01:00</updated><id>http://localhost:4000/kubernetes-notes-part-2</id><content type="html" xml:base="http://localhost:4000/kubernetes-notes-part-2/">&lt;p&gt;Some kubernetes studies notes üéâ&lt;/p&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;kubernetes&quot;&gt;Kubernetes&lt;/h1&gt;

&lt;h2 id=&quot;concepts-and-architecture&quot;&gt;Concepts and Architecture&lt;/h2&gt;

&lt;h3 id=&quot;master-node-components&quot;&gt;Master node components&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;kube-apiserver: cordinates all the administratives tasks.&lt;/li&gt;
  &lt;li&gt;kube-scheduler: is to assign new workload objects, such as pods, to nodes.&lt;/li&gt;
  &lt;li&gt;controller managers: are control plane components on the master node running controllers to regulate the state of the Kubernetes cluster.&lt;/li&gt;
  &lt;li&gt;kube-controller-manager: responsible to act when nodes become unavailable, to ensure pod counts are as expected, to create endpoints, service accounts, and API access tokens.&lt;/li&gt;
  &lt;li&gt;cloud-controller-manager: interact with the underlying infrastructure of a cloud provider when nodes become unavailable, to manage storage volumes when provided by a cloud service, and to manage load balancing and routing.&lt;/li&gt;
  &lt;li&gt;etcd: distributed key-value data store used to persist a Kubernetes cluster‚Äôs state.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;worker-node&quot;&gt;Worker node&lt;/h3&gt;
&lt;p&gt;It provides a running environment for client applications&lt;/p&gt;

&lt;h4 id=&quot;components&quot;&gt;Components&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Container Runtime: to Manage a container‚Äôs lifecycle, such as Docker, containered..&lt;/li&gt;
  &lt;li&gt;Node Agent - kubelet: it is an agent running on each node and communicates with the control plane components from the master node.&lt;/li&gt;
  &lt;li&gt;Proxy - kube-proxy: it is the network agent which runs on each node responsible for dynamic updates and maintenance of all networking rules on the node. It abstracts the details of Pods networking and forwards connection requests to Pods.&lt;/li&gt;
  &lt;li&gt;Addons for DNS, Dashboard user interface, cluster-level monitoring and logging.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;network&quot;&gt;Network&lt;/h3&gt;

&lt;p&gt;We can have pods communicating with other pods, containers inside pods communicating with each other, deployments communicating with each other, nodes communicatins with each other‚Ä¶&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.superbytehosting.com/wp-content/uploads/2020/07/Kubernetes-Networking-Model.jpg&quot; alt=&quot;Kubernetes Networking&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Kubernetes has an internal DNS
You can set a resolved DNS like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;your-service-name.your-namespace-name.svc.cluster.local&lt;/code&gt;. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cluster.local&lt;/code&gt; means the internal host.&lt;/p&gt;

&lt;h4 id=&quot;services&quot;&gt;Services&lt;/h4&gt;

&lt;p&gt;They are the way we can expose the services to outside from kubernetes, it‚Äôs considerated as network abstraction, and kind a ‚Äúphysical portforward‚Äù.&lt;/p&gt;

&lt;p&gt;The services receives a selector with the label, entry and exit port. We can choose which deployment or other workload are gonna be inside of the service through labels, with that we can aggregate the apps inside the same IP&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/k8s-services.png&quot; alt=&quot;Services&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;types-of-service&quot;&gt;Types of service&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;ClusterIP: intern IP&lt;/li&gt;
  &lt;li&gt;NodePort: opens a fixed port on the node for external access via IP&lt;/li&gt;
  &lt;li&gt;ExternalName: expose the service with a defined name, it doesn‚Äôt use proxy and it uses a DNS CNAME record&lt;/li&gt;
  &lt;li&gt;LoadBalancer: creates a load balance solution and gives a external and fixed IP address&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;ingress&quot;&gt;Ingress&lt;/h4&gt;

&lt;p&gt;Ingress is a network workload, it exposes the application to the external world, also there is a set of rules to allow the entry in the cluster. For default, all external request outside from kubernet are blocked, but all request to outside are allowed. Always is related to a service, it never comes alone. The service redirects the traffic to the pods. It can add a digital certificate&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/k8s-ingress.png&quot; alt=&quot;Services&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;ingress-controllers&quot;&gt;Ingress Controllers&lt;/h4&gt;
&lt;h5 id=&quot;reverse-proxy&quot;&gt;Reverse Proxy&lt;/h5&gt;
&lt;p&gt;we receive requests from the users in one place, and the reverse proxy forwards the requests that the place received to the service.&lt;/p&gt;

&lt;h5 id=&quot;what-is-ingress-controllers&quot;&gt;What is ingress controllers?&lt;/h5&gt;
&lt;p&gt;It‚Äôs kind of a reverse proxy. It acts as a proxy and route to the pods. Also, it detects automatically new ingresses to add this new domain in an allowed list.&lt;/p&gt;

&lt;h4 id=&quot;port-forward&quot;&gt;Port Forward&lt;/h4&gt;
&lt;p&gt;It gets a localhost port and forwards to an internal Kubernetes port&lt;/p&gt;

&lt;h4 id=&quot;namespaces&quot;&gt;Namespaces&lt;/h4&gt;
&lt;p&gt;Namespaces are a logic division so that you can divide apps without they‚Äôre split by nodes.
There are some default namespaces, such as kube-public, kube-system and default.&lt;/p&gt;

&lt;p&gt;We can have different permissions for different roles as well&lt;/p&gt;

&lt;h4 id=&quot;rbac&quot;&gt;RBAC&lt;/h4&gt;
&lt;p&gt;RBAC means Role-based access control. It is a method of regulating access to computer or network resources based on the roles of individual users within your organization (access policies based per roles).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/k8s-namespaces.png&quot; alt=&quot;Namespaces&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;secrets&quot;&gt;Secrets&lt;/h4&gt;
&lt;p&gt;It‚Äôs a file that you can add sensible data that will be encode to base-64.
You can use the secrets as:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;read envvars;&lt;/li&gt;
  &lt;li&gt;as files in volume mount;&lt;/li&gt;
  &lt;li&gt;download private images.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/k8s-secrets-as-file.png&quot; alt=&quot;Secrets as a file&quot; class=&quot;center-image&quot; /&gt;
&lt;img src=&quot;/assets/images/k8s-secrets-as-env.png&quot; alt=&quot;Secrets as env&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;config-maps&quot;&gt;Config Maps&lt;/h4&gt;
&lt;p&gt;Very similar to secrets, but it‚Äôs simpler. The difference is the data isn‚Äôt encoded&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/k8s-configmaps.png&quot; alt=&quot;ConfigMaps&quot; class=&quot;center-image&quot; /&gt;
&lt;img src=&quot;/assets/images/k8s-configmaps-as-file.png&quot; alt=&quot;ConfigMaps as file&quot; class=&quot;center-image&quot; /&gt;
&lt;img src=&quot;/assets/images/k8s-configmaps-as-env.png&quot; alt=&quot;ConfigMaps as env&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;the config maps propagate automatically to the pods. We can set the propagation type, the configmaps changes can be observer by the pods or it can have a TTL.&lt;/p&gt;

&lt;h4 id=&quot;sources&quot;&gt;Sources:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Post - &lt;a href=&quot;https://www.cncf.io/phippy/the-childrens-illustrated-guide-to-kubernetes/&quot;&gt;The Illustrated Children‚Äôs Guide to Kubernetes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Youtube Video - &lt;a href=&quot;https://www.youtube.com/watch?v=4ht22ReBjno&quot;&gt;The Illustrated Children‚Äôs Guide to Kubernetes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Course - &lt;a href=&quot;https://www.edx.org/course/introduction-to-kubernetes&quot;&gt;Introduction to Kubernetes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;GitHub - &lt;a href=&quot;https://github.com/badtuxx/DescomplicandoKubernetes&quot;&gt;Descomplicando Kuberntes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Bootcamp - &lt;a href=&quot;https://channel9.msdn.com/Series/AKS-Bootcamp-From-zero-to-container-hero&quot;&gt;Maratona AKS: Tudo sobre Kubernetes de A a Z&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Youtube Video - &lt;a href=&quot;https://youtu.be/X48VuDVv0do&quot;&gt;Kubernetes Tutorial for Beginners - FULL COURSE in 4 Hours&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;</content><author><name>beatrizuezu</name></author><category term="blog" /><category term="kubernetes" /><category term="notes" /><category term="studies" /><summary type="html">Some kubernetes studies notes üéâ</summary></entry><entry><title type="html">[EN] Kubernetes Notes - Part 1</title><link href="http://localhost:4000/kubernetes-notes-part-1/" rel="alternate" type="text/html" title="[EN] Kubernetes Notes - Part 1" /><published>2021-10-09T00:00:00+02:00</published><updated>2021-10-09T00:00:00+02:00</updated><id>http://localhost:4000/kubernetes-notes-part-1</id><content type="html" xml:base="http://localhost:4000/kubernetes-notes-part-1/">&lt;p&gt;Some kubernetes studies notes üéâ&lt;/p&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;kubernetes&quot;&gt;Kubernetes&lt;/h1&gt;

&lt;h2 id=&quot;what-do-i-need-to-know-first-to-undestand-kubernetes&quot;&gt;What do I need to know first to undestand Kubernetes?&lt;/h2&gt;
&lt;h3 id=&quot;containers&quot;&gt;Containers&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;To provide portable and isolated virtual environment&lt;/li&gt;
  &lt;li&gt;Need to be managed and connected to external world&lt;/li&gt;
  &lt;li&gt;Must be scheduled, distribuited and load balanced and the data persisted somewhere&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;containers-orchestration&quot;&gt;Containers Orchestration&lt;/h3&gt;

&lt;h2 id=&quot;what-is-kubernetes&quot;&gt;What is Kubernetes&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;‚ÄúKubernetes‚Äù is the Greek word which means helmsman or ship pilot. With this analogy in mind, we can think of Kubernetes as the pilot on a ship of containers.&lt;/li&gt;
  &lt;li&gt;Referred to as k8s&lt;/li&gt;
  &lt;li&gt;The Kubernetes project focuses on building a robust platform (a fault-tolerant and scalable solution) for running thousands of containers in production.&lt;/li&gt;
  &lt;li&gt;Can be achieved by creating a single controller/management unit, after connecting multiple nodes together. This controller/management unit is generally referred to as a container orchestrator.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;features&quot;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Automatic bin packing&lt;/li&gt;
  &lt;li&gt;Self-healing: Kubernetes automatically replaces and reschedules containers from failed nodes&lt;/li&gt;
  &lt;li&gt;Horizontal scaling: scaled manually or automatically based on CPU or custom metrics utilization.&lt;/li&gt;
  &lt;li&gt;Service discovery and Load balancing&lt;/li&gt;
  &lt;li&gt;Automated rollouts and rollbacks: to prevent any downtime&lt;/li&gt;
  &lt;li&gt;Secret and configuration management&lt;/li&gt;
  &lt;li&gt;Storage orchestration&lt;/li&gt;
  &lt;li&gt;Batch execution: supports batch execution, long-running jobs, and replaces failed containers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;why-use-kubernetes&quot;&gt;Why use Kubernetes?&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Can be deployed in many environments such as local or remote Virtual Machines, bare metal, or in public/private/hybrid/multi-cloud setups&lt;/li&gt;
  &lt;li&gt;Kubernetes‚Äô architecture is modular and pluggable&lt;/li&gt;
  &lt;li&gt;Kubernetes‚Äô functionality can be extended&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;importants-terms&quot;&gt;Importants terms&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Node: or workers, it runs proccess. It contains the app, proxy and kubelet, it can has one or more pods.&lt;/li&gt;
  &lt;li&gt;Kubelet (Node Agent): responsible to inform to control plane how many cpu, memory the node has.&lt;/li&gt;
  &lt;li&gt;Control plane: virtual machine, it run a lot of services, such as scheduler service, API server, node controller and state storage (etcd).&lt;/li&gt;
  &lt;li&gt;etcd: it is a distributed key-value store which only holds cluster state related data, no client workload data.&lt;/li&gt;
  &lt;li&gt;Kubectl: Kubernetes CLI, point of control for all apps based in Kubernetes, based in configuration files.&lt;/li&gt;
  &lt;li&gt;Workloads: everthing you can put inside of kubernetes that generate a work rules, like apps and DNS. The workloads are:
    &lt;ul&gt;
      &lt;li&gt;Pod&lt;/li&gt;
      &lt;li&gt;Deployment&lt;/li&gt;
      &lt;li&gt;ReplicaSet&lt;/li&gt;
      &lt;li&gt;Secret&lt;/li&gt;
      &lt;li&gt;Configmap&lt;/li&gt;
      &lt;li&gt;HorizontalPodAutoscaler&lt;/li&gt;
      &lt;li&gt;Service&lt;/li&gt;
      &lt;li&gt;Ingress&lt;/li&gt;
      &lt;li&gt;‚Ä¶&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Pods: the smallest unit in Kubernetes, you can run one or more containers. Each pod contains an internal IP, it runs the application in the container and it can has or not a volume. Volume is a pre-existing data structure to use in the pod to share files or to use a temporary files.
&lt;img src=&quot;/assets/images/k8s-pods.png&quot; alt=&quot;Pods&quot; class=&quot;center-image&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Labels: as ‚Äúnametags‚Äù to identify things, it can be used to query based on the labels.&lt;/li&gt;
  &lt;li&gt;Deployments: deployments manages and adds ‚Äúintelligence‚Äù to pods, and it can group pods by an label. Also, you can define the number of replicas inside of the deployment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/k8s-deployment.png&quot; alt=&quot;Deployment&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/k8s-deployment-file-example.png&quot; alt=&quot;Deployment File example&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Replicaset: it created by a deployment. It manage the number of replicas inside of the cluster. Each one contains a different image version, it is able to create versions of images. It always keep the desired number state.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Replication Controllers: responsible to manage the numbers of pods, pods‚Äô lifecycle, scaling up and down, rolling deployments, and monitoring.&lt;/li&gt;
  &lt;li&gt;Services: Responsible to tell to the rest of the Kubernetes environment what services your application provides, the service IP addresses and ports remain the same.&lt;/li&gt;
  &lt;li&gt;Volume: Location where containers can access and store information.&lt;/li&gt;
  &lt;li&gt;Namespaces: group of services, pods, replication controllers, and volumes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/k8s-concepts.png&quot; alt=&quot;Some Kubernetes terms&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;sources&quot;&gt;Sources:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Post - &lt;a href=&quot;https://www.cncf.io/phippy/the-childrens-illustrated-guide-to-kubernetes/&quot;&gt;The Illustrated Children‚Äôs Guide to Kubernetes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Youtube Video - &lt;a href=&quot;https://www.youtube.com/watch?v=4ht22ReBjno&quot;&gt;The Illustrated Children‚Äôs Guide to Kubernetes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Course - &lt;a href=&quot;https://www.edx.org/course/introduction-to-kubernetes&quot;&gt;Introduction to Kubernetes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;GitHub - &lt;a href=&quot;https://github.com/badtuxx/DescomplicandoKubernetes&quot;&gt;Descomplicando Kuberntes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Bootcamp - &lt;a href=&quot;https://channel9.msdn.com/Series/AKS-Bootcamp-From-zero-to-container-hero&quot;&gt;Maratona AKS: Tudo sobre Kubernetes de A a Z&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Youtube Video - &lt;a href=&quot;https://youtu.be/X48VuDVv0do&quot;&gt;Kubernetes Tutorial for Beginners - FULL COURSE in 4 Hours&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;</content><author><name>beatrizuezu</name></author><category term="blog" /><category term="kubernetes" /><category term="notes" /><category term="studies" /><summary type="html">Some kubernetes studies notes üéâ</summary></entry><entry><title type="html">Anota√ß√µes sobre Princ√≠pios SOLID</title><link href="http://localhost:4000/solid/" rel="alternate" type="text/html" title="Anota√ß√µes sobre Princ√≠pios SOLID" /><published>2021-10-05T00:00:00+02:00</published><updated>2021-10-05T00:00:00+02:00</updated><id>http://localhost:4000/solid</id><content type="html" xml:base="http://localhost:4000/solid/">&lt;p&gt;Anota√ß√µes sobre SOLID&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;o-que-√©-solid&quot;&gt;O que √© SOLID?&lt;/h2&gt;

&lt;p&gt;SOLID √© uma sigla em ingl√™s para cinco princ√≠cios da programa√ß√£o orientada a objetos.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;S&lt;/strong&gt;ingle Responsability Principle - Princ√≠pio da Responsabilidade √önica&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;O&lt;/strong&gt;pen-Closed Principle - Princ√≠pio Aberto Fechado&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;L&lt;/strong&gt;iskov Substitution Principle - Princ√≠pio da Substitui√ß√£o de Liskov&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;I&lt;/strong&gt;nterface Segregation Principle - Princ√≠pio da Segrega√ß√£o de Interfaces&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;D&lt;/strong&gt;ependency Inversion Principle - Princ√≠pio da Invers√£o de Depend√™ncia&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Os princ√≠pios foram criados pelo Uncle Bob (Robert C. Martin) e o acr√¥nimo foi criado por Michael Feathers.&lt;/p&gt;

&lt;h2 id=&quot;single-responsibility-principle-srp---princ√≠pio-da-responsabilidade-√∫nica&quot;&gt;Single Responsibility Principle (SRP) - Princ√≠pio da Responsabilidade √önica&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;A class should do one thing and therefore it should have only a single reason to change.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;‚ÄúUma classe deve fazer uma coisa e, portanto, deve ter apenas um √∫nico motivo para mudar.‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Uma classe deve ter uma √∫nica responsabilidade, permitindo assim separar comportamentos e evitar acoplamentos.
Isso tamb√©m √© aplicado para fun√ß√µes, m√©todos e m√≥dulos.&lt;/p&gt;

&lt;h2 id=&quot;open-closed-principle-ocp---princ√≠pio-aberto-fechado&quot;&gt;Open-Closed Principle (OCP) - Princ√≠pio Aberto Fechado&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;A module should be open for extension but closed for modification.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;‚ÄúUm m√≥dulo deve ser aberto para extens√£o, mas fechado para modifica√ß√£o.‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Ao escrever uma funcionalidade ou comportamento novos, devemos estender, ou seja, devemos incluir ao em vez de modificar o que j√° existe.&lt;/p&gt;

&lt;h2 id=&quot;liskov-substitution-principle-lsp---princ√≠pio-da-substitui√ß√£o-de-liskov&quot;&gt;Liskov Substitution Principle (LSP) - Princ√≠pio da Substitui√ß√£o de Liskov&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Subclasses should be substitutable for their base classes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;‚ÄúAs subclasses devem ser substitu√≠veis por suas classes b√°sicas.‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Quando temos uma classe B que herda de uma classe A, esperamos que a classe B estenda os comportamentos da classe A.&lt;/p&gt;

&lt;h2 id=&quot;interface-segregation-principle-isp---princ√≠pio-da-segrega√ß√£o-de-interfaces&quot;&gt;Interface Segregation Principle (ISP) - Princ√≠pio da Segrega√ß√£o de Interfaces&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Many client specific interfaces are better than one general purpose interface&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;‚ÄúMuitas interfaces espec√≠ficas do cliente s√£o melhores do que uma interface de prop√≥sito geral‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Classes implementadas n√£o devem serem for√ßadas a implementar funcionalidades que ela n√£o precisa.&lt;/p&gt;

&lt;h2 id=&quot;dependency-inversion-principle-dip---princ√≠pio-da-invers√£o-de-depend√™ncia&quot;&gt;Dependency Inversion Principle (DIP) - Princ√≠pio da Invers√£o de Depend√™ncia&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Depend upon Abstractions. Do not depend upon concretions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;‚ÄúDependa de abstra√ß√µes. N√£o dependa de concre√ß√µes.‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Clases novas devem depender de interfaces ou de abstra√ß√µes e n√£o de classes concretas&lt;/p&gt;

&lt;h3 id=&quot;notas&quot;&gt;Notas&lt;/h3&gt;
&lt;p&gt;Recomendo assistir o v√≠deo &lt;a href=&quot;https://www.youtube.com/watch?v=6SfrO3D4dHM&quot;&gt;SOLID fica F√ÅCIL com Essas Ilustra√ß√µes&lt;/a&gt;, do &lt;a href=&quot;https://twitter.com/FilipeDeschamps&quot;&gt;Filipe Deschamps&lt;/a&gt; em que ele explica o artigo &lt;a href=&quot;https://medium.com/backticks-tildes/the-s-o-l-i-d-principles-in-pictures-b34ce2f1e898&quot;&gt;The S.O.L.I.D Principles in Pictures&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;refer√™ncias&quot;&gt;Refer√™ncias&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Artigo Free Code Camp- &lt;a href=&quot;https://www.freecodecamp.org/news/solid-principles-explained-in-plain-english/&quot;&gt;The SOLID Principles of Object-Oriented Programming Explained in Plain English&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Artigo Medium - &lt;a href=&quot;https://medium.com/backticks-tildes/the-s-o-l-i-d-principles-in-pictures-b34ce2f1e898&quot;&gt;The S.O.L.I.D Principles in Pictures&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Artigo Medium - &lt;a href=&quot;https://medium.com/desenvolvendo-com-paixao/o-que-%C3%A9-solid-o-guia-completo-para-voc%C3%AA-entender-os-5-princ%C3%ADpios-da-poo-2b937b3fc530&quot;&gt;O que √© SOLID: O guia completo para voc√™ entender os 5 princ√≠pios da POO&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Paper - &lt;a href=&quot;https://fi.ort.edu.uy/innovaportal/file/2032/1/design_principles.pdf&quot;&gt;Design Principles and Design Patterns&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Youtube Video - &lt;a href=&quot;https://www.youtube.com/watch?v=6SfrO3D4dHM&quot;&gt;SOLID fica F√ÅCIL com Essas Ilustra√ß√µes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Talk - &lt;a href=&quot;https://pgrangeiro.github.io/solid-python-talk/&quot;&gt;SOLID Python - Princ√≠pios SOLID em Projetos Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Obrigada por ter lido &amp;lt;3&lt;/p&gt;

&lt;hr /&gt;</content><author><name>beatrizuezu</name></author><category term="blog" /><category term="solid" /><category term="orienta√ß√£o a objetos" /><summary type="html">Anota√ß√µes sobre SOLID</summary></entry><entry><title type="html">[EN] My Work Out Process</title><link href="http://localhost:4000/work-out-process/" rel="alternate" type="text/html" title="[EN] My Work Out Process" /><published>2021-08-31T00:00:00+02:00</published><updated>2021-08-31T00:00:00+02:00</updated><id>http://localhost:4000/work-out-process</id><content type="html" xml:base="http://localhost:4000/work-out-process/">&lt;p&gt;I have completed 1 year working out at home consistently. 
 üéâ&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: this post is related to my process and I‚Äôm trying to motivate you to be high on endorphin, try to figure out what kind of work out/sport works for you.&lt;/p&gt;

&lt;p&gt;I had to start working out because I was sedentary before the pandemic started (2020, March) and I was sick when I returned from an exchange. After eating something fatty I got sick, experiencing headache and nausea. So, I decided to investigate these problems and I went to 3 or 4 doctors and nutritionists. I had to do a lot of exams. The conclusion was: I had to do physical exercises and change my diet.&lt;/p&gt;

&lt;p&gt;Let‚Äôs focus on the work out process here. I decided to work out at home due to COVID and quarantine. It was not easy to start and stick to this routine. At the beginning, I started to do it 4 times a week and anaerobic on weekends, with time I was adapting my training with my availability. There was a period that I did it 3 times a week on alternate days and I noticed that during the days I didn‚Äôt workout I was lazier and less willing, so I decided to work out every day in less time.&lt;/p&gt;

&lt;p&gt;I can realize the work out routine helps me sleep better, dealing with the anxiety and self-esteem, I feel more willing and that I have some muscles that I couldn‚Äôt imagine! üòÑ&lt;/p&gt;

&lt;p&gt;Not everyday I‚Äôm motivated to work out, but I have to do it. After the work out I feel more energetic ‚ö°. I like to be high on endorphin üòÇ there is a Brazilian hashtag #ChapadinhaDeEndorfina and a profile with the same name on Instagram.&lt;/p&gt;

&lt;p&gt;I‚Äôm not even close to being an athlete, but it changed my life completely. I would like to do many different sports, like crossfit, boxing, running (I‚Äôm trying this one occasionally), cycling (when I was in Brazil I usually used to cycle once a week), soccer and handball (I used to play when I was at school lol).&lt;/p&gt;

&lt;p&gt;Ah, it‚Äôs an important point here, I‚Äôm followed up by a physical education professional. This is a good option to not be hurt while working out.&lt;/p&gt;

&lt;p&gt;I‚Äôll try to write more in English just to practice, feel free to send me a message if you would like to talk more about it with me or anything related :)&lt;/p&gt;

&lt;p&gt;Thank you for reading &amp;lt;3&lt;/p&gt;

&lt;hr /&gt;</content><author><name>beatrizuezu</name></author><category term="blog" /><category term="workout" /><category term="endorphin" /><category term="habit" /><summary type="html">I have completed 1 year working out at home consistently. üéâ</summary></entry><entry><title type="html">Twelve Factor App</title><link href="http://localhost:4000/twelve-factor-app/" rel="alternate" type="text/html" title="Twelve Factor App" /><published>2021-06-24T00:00:00+02:00</published><updated>2021-06-24T00:00:00+02:00</updated><id>http://localhost:4000/twelve-factor-app</id><content type="html" xml:base="http://localhost:4000/twelve-factor-app/">&lt;p&gt;Essas s√£o as minhas anota√ß√µes do meu estudo sobre 12 Factor App, aproveitei tamb√©m para compartilhar esses conhecimentos com o meu time do trabalho :)&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;metodologia-de-aplica√ß√µes-doze-fatores-ou-12-factor-app&quot;&gt;Metodologia de aplica√ß√µes doze fatores ou 12 Factor App&lt;/h1&gt;

&lt;h2 id=&quot;o-que-√©&quot;&gt;O que √©?&lt;/h2&gt;

&lt;p&gt;√â uma metodologia criada pelo Heroku que traz doze regras/princ√≠pios/boas pr√°ticas de desenvolvimento de software que podem ser aplicada em qualquer linguagem de programa√ß√£o e que utilizem qualquer combina√ß√£o de servi√ßos de suportes (banco de dados, caches‚Ä¶).&lt;/p&gt;

&lt;p&gt;Essas pr√°ticas nos ajudam a automatizar e minimizar a configura√ß√£o inicial do projeto, ter uma portabilidade entre os ambientes em que o projeto ser√° executado, facilitar o deploy em servi√ßos em cloud, minimizar diverg√™ncias entre ambientes e escalar a aplica√ß√£o de uma forma sustent√°vel.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/pt_br/&quot;&gt;Documenta√ß√£o em portug√™s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/&quot;&gt;Documenta√ß√£o em ingl√™s&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;quando-e-como-utilizar&quot;&gt;Quando e como utilizar?&lt;/h2&gt;

&lt;p&gt;Dependendo do projeto conseguimos aplicar a maioria dos fatores,mas ser√° necess√°rio o entendimento da necessidade para que n√£o torne o projeto complexo. Quanto mais fatores utilizado mais o software estar√° pronto para ser utilizado como um servi√ßo (&lt;em&gt;Software as a Service&lt;/em&gt;, SAAS).&lt;/p&gt;

&lt;h2 id=&quot;os-12-fatores&quot;&gt;Os 12 fatores&lt;/h2&gt;

&lt;h3 id=&quot;01---base-de-c√≥digo-codebase&quot;&gt;01 - Base de c√≥digo (Codebase)&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;One codebase tracked in revision control, many deploys&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;‚ÄúUma base de c√≥digo com rastreamento utilizando controle de revis√£o, muitos deploys‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Ou seja, utilizar um sistema de controle de vers√£o de c√≥digo, como git, mercurial ou subversion, para ter o c√≥digo centralizado em um reposit√≥rio. Se tivermos mais de uma aplica√ß√£o compartilhando o mesmo c√≥digo, estamos violando os 12 fatores. A solu√ß√£o para isso √© fatorar o c√≥digo compartilhado em uma biblioteca e incluir  atrav√©s de um gerenciador de &lt;a href=&quot;pr√≥ximo t√≥pico.&quot;&gt;depend√™ncias&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;V√°rias aplica√ß√µes/servi√ßos devem estar base de c√≥digo independentes, para que elas sejam auto contidas, assim a altera√ß√£o em uma aplica√ß√£o n√£o dependa e impacte a outra.&lt;/p&gt;

&lt;p&gt;Podemos ter alguns ambientes para fazer o deploy (implanta√ß√£o do c√≥digo), ambiente de desenvolvimento, tamb√©m chamado de ambiente local, homologa√ß√£o (staging) e produ√ß√£o (production). Cada pessoa desenvolvedora pode ter uma vers√£o da aplica√ß√£o rodando no ambiente de desenvolvimento (ambiente local), assim como os ambientes de homologa√ß√£o e produ√ß√£o podemos ter vers√µes diferentes em cada deploy.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/pt_br/codebase&quot;&gt;Documenta√ß√£o em portug√™s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/codebase&quot;&gt;Documenta√ß√£o em ingl√™s&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;02---depend√™ncias-dependencies&quot;&gt;02 - Depend√™ncias (Dependencies)&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Explicitly declare and isolate dependencies&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;‚ÄúDeclare e isole explicitamente as depend√™ncias‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Maioria das linguagens de programa√ß√£o possuem gerenciadores de depend√™ncias, com elas podemos instalar as bibliotecas que s√£o utilizadas na aplica√ß√£o. Todas as depend√™ncias precisam estar explicitamentes declaradas por meio de um manifesto de declara√ß√£o de depend√™ncia, ou seja, haver√° um arquivo que cont√©m as bibliotecas que s√£o utilizadas na aplica√ß√£o e qual a vers√£o usada na aplica√ß√£o. Podemos utilizar ferramentas que isolem o ambiente para que n√£o tenhamos conflitos de depend√™ncias com outras bibliotecas de outros projetos.&lt;/p&gt;

&lt;p&gt;Por exemplo, no Python podemos utilizar o pip, pipenv, poetry como gerenciadores de depend√™ncia e o virtualenv para isolar o ambiente. No Java temos o gradle e o maven, no Ruby bundler como gerenciadores de depend√™ncia.&lt;/p&gt;

&lt;p&gt;Isso simplifica o processo de configura√ß√£o da aplica√ß√£o para as pessoas desenvolvedoras e tamb√©m facilita a portabilidade de servidor.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/pt_br/dependencies&quot;&gt;Documenta√ß√£o em portug√™s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/dependencies&quot;&gt;Documenta√ß√£o em ingl√™s&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;03---configura√ß√µes-config&quot;&gt;03 - Configura√ß√µes (Config)&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Store config in the environment&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;‚ÄúArmazene as configura√ß√µes no ambiente‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Esse fator significa que devemos armazenar as configura√ß√µes no ambiente, pois as configura√ß√µes do aplicativo variam em cada ambiente (local, staging e production) e assim conseguimos ter as configura√ß√µes separadas do c√≥digo. Entende-se como configura√ß√£o como credenciais para servi√ßos externos e da aplica√ß√£o, vari√°veis que diferem em cada ambiente, como o hostname e banco de dados.&lt;/p&gt;

&lt;p&gt;Na aplica√ß√£o podemos ter um arquivo para armazenar essas configura√ß√µes e que n√£o deve ser versionado. Chamamos essas configura√ß√µes de vari√°veis de ambiente (&lt;em&gt;environment variables&lt;/em&gt; ou &lt;em&gt;env vars&lt;/em&gt;), as vari√°veis s√£o definidas no pr√≥prio sistema operacional.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/pt_br/config&quot;&gt;Documenta√ß√£o em portug√™s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/config&quot;&gt;Documenta√ß√£o em ingl√™s&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;04---servi√ßos-de-apoio-backing-services&quot;&gt;04 - Servi√ßos de Apoio (Backing Services)&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Treat backing services as attached resources&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;‚ÄúTrate servi√ßos de apoio como recursos anexados‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;S√£o considerados servi√ßos de apoio qualquer servi√ßo terceiro como banco de dados, sistema de mensageria e filas, servi√ßos de emails e de cache, servi√ßos de m√©tricas e logs, ou seja, s√£o servi√ßos que a aplica√ß√£o utiliza como parte do sistema, isto √© um recurso anexado.&lt;/p&gt;

&lt;p&gt;Esse fator sugere que em um servi√ßo local e de terceiros n√£o deve haver distin√ß√£o. Isso quer dizer que, caso seja necess√°rio a troca de um recurso para outro n√£o deve haver mudan√ßa no c√≥digo, a n√£o ser que tenhamos algo muito espec√≠fico que estamos utilizando do recurso. Podemos utilizar o exemplo a mudan√ßa do banco de dados MySQL para um outro banco seja PostgreSQL ou RDS da Amazon, isso deve ser transparente para a aplica√ß√£o.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/pt_br/backing-services&quot;&gt;Documenta√ß√£o em portug√™s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/backing-services&quot;&gt;Documenta√ß√£o em ingl√™s&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;05---construa-lance-execute-build-release-run&quot;&gt;05 - Construa, lance, execute (Build, release, run)&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Strictly separate build and run stages&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;‚ÄúSepare estritamente os est√°gios de constru√ß√£o e execu√ß√£o‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;O processo do deploy da base de c√≥digo ocorre em tr√™s est√°gios:&lt;/p&gt;

&lt;h4 id=&quot;constru√ß√£o-build&quot;&gt;Constru√ß√£o (&lt;em&gt;Build&lt;/em&gt;)&lt;/h4&gt;

&lt;p&gt;Nesse est√°gio √© obtido as depend√™ncias do projeto, compilado em bin√°rio e lida com os arquivos est√°ticos (&lt;em&gt;assets&lt;/em&gt;) para que seja gerado o execut√°vel do projeto.&lt;/p&gt;

&lt;h4 id=&quot;lan√ßamento-release&quot;&gt;Lan√ßamento (&lt;em&gt;Release&lt;/em&gt;)&lt;/h4&gt;

&lt;p&gt;O est√°gio de release √© a combina√ß√£o do build com as configura√ß√µes de ambiente em que ser√° feita o deploy.√â muito comum termos vers√µes de release com um identificador √∫nico, pode ser utilizado um n√∫mero incremental (como &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v123&lt;/code&gt;), &lt;a href=&quot;https://semver.org/lang/pt-BR/&quot;&gt;versionamento sem√¢ntico&lt;/a&gt; ( como &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2.1.1&lt;/code&gt;) ou por data e hora (como &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;202106052230&lt;/code&gt;), assim caso precise fazer a revers√£o da vers√£o anterior, tamb√©m conhecido como &lt;em&gt;rollback&lt;/em&gt;, fique f√°cil de identificar o release.&lt;/p&gt;

&lt;h4 id=&quot;execu√ß√£o-run&quot;&gt;Execu√ß√£o (&lt;em&gt;Run&lt;/em&gt;)&lt;/h4&gt;

&lt;p&gt;√â nesse est√°gio em que ser√° inicializado os processos para que a aplica√ß√£o seja executada.&lt;/p&gt;

&lt;p&gt;Para cada est√°gio h√° ferramentas especificas da cada linguaguem em fazer a automatiza√ß√£o do build, release e run.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/pt_br/build-release-run&quot;&gt;Documenta√ß√£o em portug√™s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/build-release-run&quot;&gt;Documenta√ß√£o em ingl√™s&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;06---processos-processes&quot;&gt;06 - Processos (&lt;em&gt;Processes&lt;/em&gt;)&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Execute the app as one or more stateless processes&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;‚ÄúExecute a aplica√ß√£o como um ou mais processos que n√£o armazenam estado‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Esse fator significa que os processos n√£o armazenam estados (&lt;em&gt;stateless&lt;/em&gt;) e n√£o devem compartilhar nada entre si. Caso os estados precisem ser armazenados, devemos utilizar um servi√ßo de apoio como uma base dados ou sistema de cache.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/pt_br/processes&quot;&gt;Documenta√ß√£o em portug√™s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/processes&quot;&gt;Documenta√ß√£o em ingl√™s&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;07---v√≠nculo-de-portas-port-binding&quot;&gt;07 - V√≠nculo de Portas (&lt;em&gt;Port binding&lt;/em&gt;)&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Export services via port binding&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;‚ÄúExporte servi√ßos via v√≠nculo de portas‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A aplica√ß√£o exporta uma porta HTTP como um servi√ßo atrav√©s dessa porta, assim atua como um servi√ßo independente podendo servir com um servi√ßo de apoio e n√£o dependa de servidores externos.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/pt_br/port-binding&quot;&gt;Documenta√ß√£o em portug√™s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/port-binding&quot;&gt;Documenta√ß√£o em ingl√™s&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;08---concorr√™ncia-concurrency&quot;&gt;08 - Concorr√™ncia (&lt;em&gt;Concurrency&lt;/em&gt;)&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Scale out via the process model&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;‚ÄúEscale atrav√©s do processo modelo‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A aplica√ß√£o deve ter um modelo para conseguir escalar. A escalabilidade pode ser:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Horizontal: adi√ß√£o de mais servidores com as mesmas configura√ß√µes de recursos (CPU, RAM);&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Vertical: aumentar os recursos de cada servidor no qual a aplica√ß√£o ou o sistema est√° sendo executado.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/pt_br/concurrency&quot;&gt;Documenta√ß√£o em portug√™s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/concurrency&quot;&gt;Documenta√ß√£o em ingl√™s&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;09---descartabilidade-disposability&quot;&gt;09 - Descartabilidade (&lt;em&gt;Disposability&lt;/em&gt;)&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Maximize robustness with fast startup and graceful shutdown&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;‚ÄúMaximize robustez com inicializa√ß√£o r√°pida e desligamento gracioso‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Os processos devem inicializar em poucos segundos para que a aplica√ß√£o esteja pronta para receber requisi√ß√µes. A inicializa√ß√£o r√°pida promove agilidade para os processos de releases e escalabilidade.&lt;/p&gt;

&lt;p&gt;Quanto o desligamento gracioso quer dizer que o servidor para de receber novas requisi√ß√µes e finaliza o que estiver em andamento e encerrar o processo.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/pt_br/disposability&quot;&gt;Documenta√ß√£o em portug√™s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/disposability&quot;&gt;Documenta√ß√£o em ingl√™s&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;10---paridade-entre-desenvolvimento-e-produ√ß√£o-devprod-parity&quot;&gt;10 - Paridade entre desenvolvimento e produ√ß√£o (&lt;em&gt;Dev/prod parity&lt;/em&gt;)&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Keep development, staging, and production as similar as possible&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;‚ÄúMantenha o desenvolvimento, homologa√ß√£o e produ√ß√£o o mais similares poss√≠vel‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Manter os ambientes mais similares poss√≠veis para que tenhamos o m√≠nimo de diverg√™ncias entre os ambientes de desenvolvimento, staging e produ√ß√£o.&lt;/p&gt;

&lt;p&gt;Esse fator pretende diminuir as diverg√™ncias em tr√™s √°reas:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;vers√£o de c√≥digo: a pessoa desenvolvedora escreve o c√≥digo em algumas horas e faz o deploy minutos depois;&lt;/li&gt;
  &lt;li&gt;equipes: a equipe que est√° envolvida no desenvolvimento daquele c√≥digo realiza e acompanha o deploy em produ√ß√£o;&lt;/li&gt;
  &lt;li&gt;ferramentas: utilizar os mesmos servi√ßos de apoio nos ambientes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/pt_br/dev-prod-parity&quot;&gt;Documenta√ß√£o em portug√™s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/dev-prod-parity&quot;&gt;Documenta√ß√£o em ingl√™s&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;11---logs-logs&quot;&gt;11 - Logs (&lt;em&gt;Logs&lt;/em&gt;)&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Treat logs as event streams&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;‚ÄúTrate logs como fluxos de eventos‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Os logs nos d√£o visibilidade sobre o comportamento da aplica√ß√£o, podemos agregar os eventos e ordernar por tempo de execu√ß√£o de todos os processos em execu√ß√£o e de servi√ßos de apoio.&lt;/p&gt;

&lt;p&gt;No ambiente de desenvolvimentos, os logs devem ser exibidos no terminal, enquanto que nos ambientes de staging e produ√ß√£o devemos utilizar ferramentas (como Graylog, Logentries, ELK) para nos auxiliar com a coleta e armazenamento dos logs.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/pt_br/logs&quot;&gt;Documenta√ß√£o em portug√™s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/logs&quot;&gt;Documenta√ß√£o em ingl√™s&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;12---processos-administrativos-admin-processes&quot;&gt;12 - Processos administrativos (&lt;em&gt;Admin processes&lt;/em&gt;)&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Run admin/management tasks as one-off processes&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;‚ÄúRode tarefas de administra√ß√£o/gest√£o em processos pontuais‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Processos administrativos s√£o processos pontuais, como migra√ß√µes, scripts e execu√ß√µes no console, devem ser executados em ambientes id√™nticos e isolados de ambientes em que tarefas de processamento longo rodam.&lt;/p&gt;

&lt;p&gt;Esses processos tamb√©m devem ser versionados, estar dentro do processo de deploy e utilizar as mesmas configura√ß√µes do ambiente.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/pt_br/admin-processes&quot;&gt;Documenta√ß√£o em portug√™s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://12factor.net/admin-processes&quot;&gt;Documenta√ß√£o em ingl√™s&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;notas&quot;&gt;Notas&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.udemy.com/course/git-e-github-para-iniciantes/&quot;&gt;Curso de git e github&lt;/a&gt; - gratuito&lt;/p&gt;

&lt;h2 id=&quot;refer√™ncias&quot;&gt;Refer√™ncias&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Youtube - &lt;a href=&quot;https://youtu.be/C2VbGlOBYyw&quot;&gt;The Twelve Factor APP - Zup Insights&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Youtube - &lt;a href=&quot;https://youtu.be/Xayg7f2utgk&quot;&gt;12 Factor App (Boas pr√°ticas para criar uma aplica√ß√£o SaaS) // Dicion√°rio do Programador&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Alura - &lt;a href=&quot;https://www.alura.com.br/curso-online-the-twelve-factor-app&quot;&gt;The Twelve-Factor App: Metodologia para constru√ß√£o de aplica√ß√µes robustas&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Medium - &lt;a href=&quot;https://medium.com/trainingcenter/twelve-factor-app-f51665af95e7&quot;&gt;Twelve Factor app - Boas pr√°ticas para microsservi√ßos&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Obrigada por ter lido &amp;lt;3&lt;/p&gt;

&lt;hr /&gt;</content><author><name>beatrizuezu</name></author><category term="blog" /><category term="twelve factor app" /><category term="metodologia de aplica√ß√µes doze fatores" /><summary type="html">Essas s√£o as minhas anota√ß√µes do meu estudo sobre 12 Factor App, aproveitei tamb√©m para compartilhar esses conhecimentos com o meu time do trabalho :)</summary></entry><entry><title type="html">Fun√ß√µes de Escopo do Kotlin</title><link href="http://localhost:4000/funcoes-escopo-kotlin/" rel="alternate" type="text/html" title="Fun√ß√µes de Escopo do Kotlin" /><published>2021-04-01T00:00:00+02:00</published><updated>2021-04-01T00:00:00+02:00</updated><id>http://localhost:4000/funcoes-escopo-kotlin</id><content type="html" xml:base="http://localhost:4000/funcoes-escopo-kotlin/">&lt;p&gt;Recentemente comecei a trabalhar em um projeto em Kotlin, e no trabalho tenho a oportunidade de aprender e a compartilhar conhecimento com meu time. Esse foi o primeiro assunto que escolhi compartilhar com eles :)&lt;/p&gt;

&lt;p&gt;Esse post √© o compilado do que li e entendi &lt;del&gt;ou n√£o&lt;/del&gt; sobre o assunto.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;o-que-s√£o-fun√ß√µes-de-escopo-scope-functions&quot;&gt;O que s√£o Fun√ß√µes de Escopo (Scope Functions)?&lt;/h2&gt;

&lt;p&gt;S√£o fun√ß√µes da biblioteca padr√£o do Kotlin cujo o objetivo √© executar um bloco de c√≥digo dentro de um escopo/contexto de um objeto que podem ou n√£o ter um valor de retorno. S√£o cinco fun√ß√µes: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;let&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run&lt;/code&gt; ,  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;with&lt;/code&gt; , &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;apply&lt;/code&gt; e &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;also&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Para come√ßar vamos utilizar a classe &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Product&lt;/code&gt; como exemplo:&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;data class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;isActive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Boolean&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;deactivate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;isActive&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;product&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Smarthphone&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;999.99&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Quando queremos mudar os atributo de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;product&lt;/code&gt; fazemos isso:&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Smarthpone Bonitono&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1_000.00&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;deativate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Com as fun√ß√µes de escopo tamb√©m √© poss√≠vel mudar os atributos e deixar o c√≥digo mais com o estilo do Kotlin.&lt;/p&gt;

&lt;h2 id=&quot;let&quot;&gt;Let&lt;/h2&gt;

&lt;p&gt;Podemos utilizar o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;let&lt;/code&gt; para alterar os atributos de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;product&lt;/code&gt; e usamos o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;it&lt;/code&gt; para referenciar o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;product&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Smarthpone Bonitono&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1_000.00&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;deactivate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;√â poss√≠vel trocar o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;it&lt;/code&gt; para qualquer outra vari√°vel para referenciar o product:&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;att&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;att&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Smarthpone Bonitono&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;att&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1_000.00&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;att&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;deactivate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;      
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  Product(title=Smarthpone Bonitono, price=1000.0, isActive=false)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Logo, os atributos de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;product&lt;/code&gt; foram modificados com &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;let&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Agora vamos entender o valor de retorno do &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;let&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Smarthpone Bonitono&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1_000.00&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;deactivate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  kotlin.Unit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ao imprimir a vari√°vel &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;result&lt;/code&gt; o retorno √© um &lt;a href=&quot;https://kotlinlang.org/docs/functions.html#unit-returning-functions&quot;&gt;kotlin.Unit&lt;/a&gt; significa que o retorno √© um valor n√£o √∫til. Portanto, conclu√≠mos que o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;let&lt;/code&gt; n√£o retorna um valor.&lt;/p&gt;

&lt;p&gt;Podemos utilizar o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;let&lt;/code&gt; quando invocamos uma ou mais fun√ß√µes em resultados de chamadas encadeadas:&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;numbers&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mutableListOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;one&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;two&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;three&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;four&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;five&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Se dentro do bloco de c√≥digo do &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;let&lt;/code&gt; tiver apenas uma fun√ß√£o com o argumento &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;it&lt;/code&gt;, podemos escrever o escopo da fun√ß√£o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;let&lt;/code&gt; como:&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;run&quot;&gt;Run&lt;/h2&gt;

&lt;p&gt;Tamb√©m √© poss√≠vel utilizar o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run&lt;/code&gt; para mudar os atributos de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;product&lt;/code&gt; e utilizamos o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;this&lt;/code&gt; para referenciar o escopo do objeto:&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;product&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Smarthphone&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;999.99&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Smarthpone Bonitono&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;700.00&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;deactivate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;O uso do &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;this&lt;/code&gt; √© opcional, e tamb√©m deixa o c√≥digo redundante, portanto podemos escrever dessa forma:&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Smarthpone Bonitono&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;700.00&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;deactivate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Vamos entender o retorno do &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Smarthpone Bonitono&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;700.00&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;deactivate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//kotlin.Unit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ao imprimir a vari√°vel &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;result&lt;/code&gt; o retorno √© um &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[kotlin.Unit&lt;/code&gt;,](https://kotlinlang.org/docs/functions.html#unit-returning-functions) significa que o retorno √© um valor n√£o √∫til. Portanto, conclu√≠mos que o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run&lt;/code&gt; n√£o retorna um valor.&lt;/p&gt;

&lt;p&gt;Podemos utilizar o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run&lt;/code&gt; para executar opera√ß√µes sobre um objeto e obter um resultado dentro de um escopo.&lt;/p&gt;

&lt;h2 id=&quot;with&quot;&gt;With&lt;/h2&gt;

&lt;p&gt;Utilizamos o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;with&lt;/code&gt; para executar fun√ß√µes no objeto dentro de um contexto. Podemos ler como ‚Äú&lt;em&gt;com esse objeto, fa√ßa&lt;/em&gt;‚Äù&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;product&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Smarthphone&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;999.99&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;deactivate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;produto desativado&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// produto desativado&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;O valor de retorno do &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;with&lt;/code&gt; √© um &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;kotlin.Unit&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;deactivate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;produto desativado&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// produto desativado&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// kotlin.Unit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;apply&quot;&gt;Apply&lt;/h2&gt;

&lt;p&gt;Podemos utilizar o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;apply&lt;/code&gt; para alterar os atributos de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;product&lt;/code&gt;, utilizamos o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;this&lt;/code&gt; para referenciar o escopo do objeto. Podemos ler ‚Äú&lt;em&gt;aplique as seguintes atribui√ß√µes ao objeto&lt;/em&gt;‚Äù&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;product&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Smarthphone&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;999.99&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;apply&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Smarthpone Bonitono&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1_000.00&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;deactivate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;O uso do &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;this&lt;/code&gt; √© opcional e tamb√©m deixa o c√≥digo redundante, portanto podemos escrever dessa forma:&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;apply&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Smarthpone Bonitono&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1_000.00&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;deactivate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;O valor de retorno do &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;apply&lt;/code&gt; √© o pr√≥prio objeto, podemos imprimir a vari√°vel &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;result&lt;/code&gt; para entender isso:&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;apply&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Smarthpone Bonitono&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1_000.00&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;deactivate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Product(title=Smarthpone Bonitono, price=1000.0, isActive=true)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;also&quot;&gt;Also&lt;/h2&gt;

&lt;p&gt;Usamos o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;also&lt;/code&gt; para a√ß√µes que utilizam o objeto do contexto como argumento ou quando precisamos de uma refer√™ncia ao inv√©s das propriedades e fun√ß√µes. Podemos ler como: ‚Äú&lt;em&gt;e tamb√©m fa√ßa com o objeto‚Äù.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Para referenciar o objeto dentro do escopo utilizamos o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;it&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;product&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Smarthphone&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;999.99&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;apply&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Smarthpone Bonitono&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;700.00&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;deactivate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;also&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Promo√ß√£o do Produto $it&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Promo√ß√£o do Produto Product(title=Smarthpone Bonitono, price=700.0, isActive=false)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;objeto-nulos&quot;&gt;Objeto nulos&lt;/h2&gt;

&lt;p&gt;Quando tivermos um objeto que possa ser nulo, as fun√ß√µes de escopo garantem que a fun√ß√£o ser√° chamada apenas se o objeto for n√£o nulo:&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;product2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// O ? permite que a vari√°vel seja nula&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;product2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;tv&quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;100.00&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isActive&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;product2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  null&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;resumo&quot;&gt;Resumo&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Fun√ß√£o&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Retorno&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Vari√°vel dentro do escopo&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Uso&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Let&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Unit/Lambda*&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;it&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Fun√ß√µes com chamadas encadeadas e checagem de objetos nulos&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Run&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Unit/Lambda*&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;this&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Inicializa√ß√£o do objeto e o c√°lculo do valor de retorno&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;With&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Unit/Lambda*&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;this&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Executar fun√ß√µes no objeto dentro de um contexto.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Apply&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Objeto&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;this&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Inicializar e configurar um objeto&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Also&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Objeto&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;it&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;A√ß√µes adicionais que n√£o alteram o objeto&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;* Na &lt;a href=&quot;https://kotlinlang.org/docs/scope-functions.html#return-value&quot;&gt;pr√≥pria documenta√ß√£o do Kotlin&lt;/a&gt; diz que retorna o resultado lambda&lt;/p&gt;

&lt;h2 id=&quot;link-√∫til&quot;&gt;Link √∫til&lt;/h2&gt;
&lt;p&gt;Voc√™ pode testar o c√≥digo usando o &lt;a href=&quot;https://play.kotlinlang.org/&quot;&gt;Kotlin Playground&lt;/a&gt;, divirta-se :)&lt;/p&gt;

&lt;h2 id=&quot;refer√™ncias&quot;&gt;Refer√™ncias&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Youtube Playlist - &lt;a href=&quot;https://www.youtube.com/watch?v=i-bWvj10k0k&amp;amp;list=PLMZ2RODGNLRK1D9kOfHLIvnhsdB8C7E4k&quot;&gt;Kotlin Scope Functions Explained&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Documenta√ß√£o Kotlin - &lt;a href=&quot;https://kotlinlang.org/docs/scope-functions.html&quot;&gt;Scope Functions&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Documenta√ß√£o Kotlin - &lt;a href=&quot;https://kotlinlang.org/docs/functions.html#unit-returning-functions&quot;&gt;Unit&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Artigo Medium - &lt;a href=&quot;https://medium.com/@fatihcoskun/kotlin-scoping-functions-apply-vs-with-let-also-run-816e4efb75f5&quot;&gt;Kotlin Scoping Functions apply vs. with, let, also, and run&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Artigo Medium - &lt;a href=&quot;https://medium.com/luizalabs/kotlin-let-run-with-also-ou-apply-24e8745f12fd&quot;&gt;Kotlin: let, run, with, also ou apply?&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Artigo Medium - &lt;a href=&quot;https://proandroiddev.com/kotlin-scope-functions-made-simple-c59b97a04ca2&quot;&gt;Kotlin Scope Functions Made Simple&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Espero que voc√™ tenha entendido sobre as fun√ß√µes de escopo do Kotlin!&lt;/p&gt;

&lt;p&gt;Obrigada por ter lido &amp;lt;3&lt;/p&gt;

&lt;hr /&gt;</content><author><name>beatrizuezu</name></author><category term="blog" /><category term="fun√ß√µes de escopo" /><category term="kotlin" /><summary type="html">Recentemente comecei a trabalhar em um projeto em Kotlin, e no trabalho tenho a oportunidade de aprender e a compartilhar conhecimento com meu time. Esse foi o primeiro assunto que escolhi compartilhar com eles :)</summary></entry><entry><title type="html">Refer√™ncia de objetos</title><link href="http://localhost:4000/referencia-objetos/" rel="alternate" type="text/html" title="Refer√™ncia de objetos" /><published>2019-11-23T00:00:00+01:00</published><updated>2019-11-23T00:00:00+01:00</updated><id>http://localhost:4000/referencia-objetos</id><content type="html" xml:base="http://localhost:4000/referencia-objetos/">&lt;p&gt;J√° aconteceu de voc√™ ter duas vari√°veis com os mesmos valores e alterar uma vari√°vel a outra tamb√©m √© alterada?&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;o-que-√©-vari√°vel-em-programa√ß√£o&quot;&gt;O que √© vari√°vel em programa√ß√£o?&lt;/h1&gt;

&lt;p&gt;Vari√°vel √© uma informa√ß√£o que ser√° armazenada em um endere√ßo da mem√≥ria do computador, para ficar mais f√°cil identificar esse endere√ßo atribuimos um nome para esse valor.&lt;/p&gt;

&lt;h1 id=&quot;caixas-e-post-its&quot;&gt;Caixas e post-its?&lt;/h1&gt;
&lt;p&gt;Para melhor entendimento podemos usar a met√°fora da caixa e do post-its. Em algumas linguagens a vari√°vel representa uma caixa que vai armazenar um determinado valor, ou seja, cada caixa representado por uma vari√°vel ter√° um endere√ßo na mem√≥ria.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/box-autora.png&quot; alt=&quot;vari√°vel autora representado pela caixa com valor beatriz&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;vari√°vel autora representado pela caixa com valor beatriz&lt;/figcaption&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/box-nome.png&quot; alt=&quot;vari√°vel nome representado pela caixa com valor beatriz&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;vari√°vel nome representado pela caixa com valor beatriz&lt;/figcaption&gt;

&lt;p&gt;Em Python, essa met√°fora n√£o √© v√°lida. Podemos dizer que as vari√°veis s√£o como post-its, as vari√°veis quando tiverem o mesmo valor ter√£o a mesma refer√™ncia.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/postits.png&quot; alt=&quot;Valor beatriz com as vari√°veis nome e autora representados pelo post-its&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;Valor beatriz com as vari√°veis nome e autora representados pelo post-its&lt;/figcaption&gt;

&lt;p&gt;Isso pode ser observado nesse c√≥digo:&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;nome = &amp;#39;beatriz&amp;#39;
autora = &amp;#39;beatriz&amp;#39;


id(nome)
#4542762672

id(autora)
#4542762672

id(&amp;#39;beatriz&amp;#39;)
#4542762672&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/beatrizuezu/d840aa64b4a2f7f2f47bf42395c6fd2f.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;A fun√ß√£o &lt;a href=&quot;https://docs.python.org/pt-br/3/library/functions.html#id&quot;&gt;id()&lt;/a&gt; retorna o endere√ßo da mem√≥ria que est√° armazenado aquele determinado valor.&lt;/p&gt;

&lt;h1 id=&quot;listas-tuplas-dicion√°rios-e-conjuntos-armazenam-refer√™ncias&quot;&gt;listas, tuplas, dicion√°rios e conjuntos armazenam refer√™ncias&lt;/h1&gt;
&lt;p&gt;Ao declarar listas, tuplas ou dicion√°rios com os mesmos valores, os objetos n√£o ter√£o o mesmo id, ou seja a mesma refer√™ncia, por√©m se os valores forem iguais ‚Äúapontar√£o‚Äù para o mesmo id.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/lista.jpg&quot; alt=&quot;Desenho ilustrativo das variaveis lista_1 e lista_2&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;Vari√°vies lista_1 e lista_2 possuem os mesmos valores&lt;/figcaption&gt;

&lt;p&gt;Podemos observar no c√≥digo abaixo que a vari√°vel &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lista_1&lt;/code&gt; e &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lista_2&lt;/code&gt; possuem os ids diferentes, mas o valor de index 0 de ambas as listas possuem o mesmo id.&lt;/p&gt;

&lt;p&gt;Podemos usar o operador &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;==&lt;/code&gt; para comparar os valores, enquanto o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;is&lt;/code&gt; √© utilizado para comparar os ids&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;lista_1 = [1, 3, 5, 7]
lista_2 = [1, 3, 5, 7]

# ids das vari√°veis sao diferentes
print(id(lista_1))
print(id(lista_2))

# ids do index 0 sao iguais
print(id(lista_1[0]))
print(id(lista_2[0]))

# verdadeiro, pois os valores sao iguais
print(lista_1 == lista_2)

# falso, pois os ids sao diferentes
print(lista_1 is lista_2)&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/beatrizuezu/35254604b2ce26757ff7bdb1ae61bd26.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Caso atribuirmos o valor de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lista_2&lt;/code&gt; em &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lista_1&lt;/code&gt;, eles ter√£o o mesmo id.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;lista_2 = [1, 3, 5, 7]

lista_1 = lista_2

# os ids serao os mesmos
print(id(lista_1))
print(id(lista_2))

# verdadeiro, pois os valores sao iguais
print(lista_1 == lista_2)

# verdadeiro, pois tem a mesma referencia
print(lista_1 is lista_2)&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/beatrizuezu/2219a404ebd014633f03ce53ca2f4b3c.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Atente-se quando for manipular uma lista ou dicion√°rio que for atribu√≠da a uma outra vari√°vel para nƒÅo perder os valores do objeto, pois estaremos alterando a mesma refer√™ncia!&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;dicionario_1 = {&amp;#39;nome&amp;#39;: &amp;#39;beatriz&amp;#39;}

dicionario_2 = dicionario_1

dicionario_2[&amp;#39;linguagem&amp;#39;] = &amp;#39;python&amp;#39;

print(dicionario_1)
# {&amp;#39;nome&amp;#39;: &amp;#39;beatriz&amp;#39;, &amp;#39;linguagem&amp;#39;: &amp;#39;python&amp;#39;}

print(dicionario_2)
# {&amp;#39;nome&amp;#39;: &amp;#39;beatriz&amp;#39;, &amp;#39;linguagem&amp;#39;: &amp;#39;python&amp;#39;}&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/beatrizuezu/d0081a5b9ee6bbfed64cd8b4162a8f1e.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Para a altera√ß√£o n√£o afetar a vari√°vel original, podemos usar o m√≥dulo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;copy&lt;/code&gt; com as fun√ß≈çes &lt;a href=&quot;https://docs.python.org/pt-br/3/library/copy.html?highlight=copy#copy.copy&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;copy()&lt;/code&gt;&lt;/a&gt;, que retorna uma c√≥pia rasa, e &lt;a href=&quot;https://docs.python.org/pt-br/3/library/copy.html?highlight=copy#copy.deepcopy&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;deepcopy()&lt;/code&gt;&lt;/a&gt;, que retorna uma c√≥pia profunda.&lt;/p&gt;

&lt;h2 id=&quot;copy&quot;&gt;copy&lt;/h2&gt;
&lt;p&gt;No c√≥digo abaixo estamos usando a fun√ß√£o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;copy()&lt;/code&gt;&lt;/p&gt;
&lt;noscript&gt;&lt;pre&gt;import copy

lista_1 = [1,2, [9,8]]

# fazendo a copia rasa
lista_2 = copy.copy(lista_1)

print(id(lista_1))
#4527883760

print(id(lista_2))
#4549096704

lista_2[2].append(7)

print(lista_2)
#[1, 2, [9, 8, 7]]

print(lista_1)
#[1, 2, [9, 8, 7]]

print(id(lista_1[2]))
#4549332496

print(id(lista_2[2]))
#4549332496&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/beatrizuezu/c78e72f96cd8568611cba991e98997a4.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Notamos que ao alterar a lista interna (index 2) da vari√°vel &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lista_2&lt;/code&gt; alterou tamb√©m a vari√°vel &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lista_1&lt;/code&gt;. Podemos dizer que tanto a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lista_1&lt;/code&gt; quanto a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lista_2&lt;/code&gt; ‚Äúapontam‚Äù para a mesma lista interna (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[9,8]&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/lista-manipulacao.jpg&quot; alt=&quot;Desenho ilustrativos das variaveis lista_1 e lista_2 apontando para a mesma lista [9,8]&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;Desenho ilustrativos das variaveis lista_1 e lista_2 apontando para a mesma lista [9,8]&lt;/figcaption&gt;

&lt;h2 id=&quot;deepcopy&quot;&gt;deepcopy&lt;/h2&gt;
&lt;p&gt;No &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;deepcopy()&lt;/code&gt; √© feita uma c√≥pia profunda&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;import copy

lista_1 = [1,2, [9,8]]

# fazendo a c√≥pia profunda
lista_2 = copy.deepcopy(lista_1)

print(id(lista_1))
#4548273648

print(id(lista_2))
#4543572480

print(id(lista_1[2]))
#4547001952

print(id(lista_2[2]))
#4543706128&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/beatrizuezu/b1ddc80c92da70608384fa0f7864d719.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;As vari√°veis n√£o compartilham da mesma refer√™ncia quando usado o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;deepcopy()&lt;/code&gt;,logo o index 2 da vari√°vel &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lista_1&lt;/code&gt; e da vari√°vel &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lista_2&lt;/code&gt; s√£o diferentes.&lt;/p&gt;

&lt;p&gt;Espero que esse post tenha ficado simples e que voc√™ tenha entendido sobre refer√™ncia de objetos!&lt;/p&gt;

&lt;p&gt;Obrigada por ter lido &amp;lt;3&lt;/p&gt;

&lt;hr /&gt;</content><author><name>beatrizuezu</name></author><category term="blog" /><category term="vari√°vel" /><category term="mem√≥ria" /><category term="refer√™ncia de objetos" /><summary type="html">J√° aconteceu de voc√™ ter duas vari√°veis com os mesmos valores e alterar uma vari√°vel a outra tamb√©m √© alterada?</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/lista.jpg" /><media:content medium="image" url="http://localhost:4000/assets/images/lista.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Entendendo map, filter, reduce e lambda</title><link href="http://localhost:4000/entendendo-map-filter-reduce-lambda/" rel="alternate" type="text/html" title="Entendendo map, filter, reduce e lambda" /><published>2019-09-29T00:00:00+02:00</published><updated>2019-09-29T00:00:00+02:00</updated><id>http://localhost:4000/entendendo-map-filter-reduce-lambda</id><content type="html" xml:base="http://localhost:4000/entendendo-map-filter-reduce-lambda/">&lt;p&gt;Antes de falar sobre map, filter e reduce, precisamos entender sobre &lt;strong&gt;fun√ß√£o de ordem superior&lt;/strong&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;fun√ß√£o-de-ordem-superior&quot;&gt;Fun√ß√£o de ordem superior&lt;/h2&gt;
&lt;p&gt;Fun√ß√£o de ordem superior √© uma fun√ß√£o que:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;recebe uma fun√ß√£o como argumento;&lt;/li&gt;
  &lt;li&gt;ou devolve uma fun√ß√£o como resultado.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Map, filter e reduce s√£o as fun√ß√µes de ordem superior mais conhecidas.&lt;/p&gt;

&lt;h2 id=&quot;map&quot;&gt;Map&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/map.png&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A fun√ß√£o map recebe uma fun√ß√£o (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dobrar_numero&lt;/code&gt;) e um iter√°vel (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;range(4)&lt;/code&gt;), cada item desse iter√°vel (n√∫meros de 0 √† 3) √© aplicada na fun√ß√£o, o que faz o map retornar um objeto map e convertemos esse resultado em uma lista.&lt;/p&gt;

&lt;h2 id=&quot;filter&quot;&gt;Filter&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/filter.png&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A fun√ß√£o filter recebe uma fun√ß√£o (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;maior_que_zero&lt;/code&gt;) e um iter√°vel (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;valores&lt;/code&gt;), cada item do iter√°vel √© aplicada a condi√ß√£o da fun√ß√£o que faz o ‚Äúfiltro‚Äù, retornando tamb√©m um objeto filter e convertemos o resultado em uma lista&lt;/p&gt;

&lt;h2 id=&quot;reduce&quot;&gt;Reduce&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/reduce.png&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A ideia de usar o &lt;a href=&quot;https://docs.python.org/3.7/library/functools.html#functools.reduce&quot;&gt;reduce&lt;/a&gt; √© aplicar uma fun√ß√£o (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;somar&lt;/code&gt;) a cada item de um iter√°vel (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;range(5)&lt;/code&gt;, ou seja, n√∫meros de 0 √† 4) a fim de ser ‚Äúreduzida‚Äù a um √∫nico valor.&lt;/p&gt;

&lt;p&gt;√â poss√≠vel passar um terceiro par√¢metro opcional para inicializar o valor da fun√ß√£o:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/reduce-initializer.png&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;lambda&quot;&gt;Lambda&lt;/h2&gt;

&lt;p&gt;Fun√ß√£o lambda tamb√©m √© conhecida como fun√ß√£o an√¥nima, e √© comum vermos a fun√ß√£o lambda ser usada junto com map, filter ou reduce afim de encurtar as fun√ß√µes criadas pelo comando &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;def&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;map-e-lambda&quot;&gt;Map e lambda&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/map-lambda.png&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;filter-e-lambda&quot;&gt;Filter e lambda&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/filter-lambda.png&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;reduce-e-lambda&quot;&gt;Reduce e lambda&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/reduce-lambda.png&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;deixando-map-filter-e-reduce-mais-leg√≠veis&quot;&gt;Deixando map, filter e reduce mais leg√≠veis&lt;/h2&gt;

&lt;p&gt;Para tornar o c√≥digo mais leg√≠vel √© poss√≠vel substituir as fun√ß√µes map e filter por list comprehension e a fun√ß√£o reduce por &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sum()&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;all()&lt;/code&gt; e &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;any()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Como j√° diz no &lt;a href=&quot;https://www.python.org/dev/peps/pep-0020/&quot;&gt; Zen of Python&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Readability counts&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;list-comprehension&quot;&gt;List Comprehension&lt;/h3&gt;

&lt;h4 id=&quot;map-vs-list-comprehension&quot;&gt;map vs list comprehension&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/map-lambda.png&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;c√≥digo usando map&lt;/figcaption&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/listcomp-map.png&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;c√≥digo substituindo map por list comprehension&lt;/figcaption&gt;

&lt;h4 id=&quot;filter-vs-list-comprehension&quot;&gt;filter vs list comprehension&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/filter-lambda.png&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;c√≥digo usando filter&lt;/figcaption&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/listcomp-filter.png&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;c√≥digo substituindo filter por list comprehension&lt;/figcaption&gt;

&lt;h4 id=&quot;reduce-vs-sum-all-any&quot;&gt;reduce vs sum, all, any&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/reduce-lambda.png&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;c√≥digo usando filter&lt;/figcaption&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sum.png&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;c√≥digo substituindo reduce por sum&lt;/figcaption&gt;

&lt;p&gt;A fun√ß√£o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;all()&lt;/code&gt; recebe um iter√°vel e se todos os elementos forem verdadeiros a fun√ß√£o retorna &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;True&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/all.png&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;figcaption class=&quot;caption&quot;&gt;exemplo de c√≥digo utilizando a fun√ß√£o all&lt;/figcaption&gt;

&lt;p&gt;A fun√ß√£o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;any()&lt;/code&gt; recebe um iter√°vel e se algum elemento for verdadeiro a fun√ß√£o retorna &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;True&lt;/code&gt;
&lt;img src=&quot;/assets/images/any.png&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;exemplo de c√≥digo utilizando a fun√ß√£o any&lt;/figcaption&gt;

&lt;p&gt;Espero que esse post tenha ficado simples e que voc√™ tenha entendido sobre map, filter, reduce e lambda!&lt;/p&gt;

&lt;p&gt;Obrigada por ter lido &amp;lt;3&lt;/p&gt;

&lt;hr /&gt;</content><author><name>beatrizuezu</name></author><category term="blog" /><category term="python" /><category term="map" /><category term="filter" /><category term="reduce" /><category term="lambda" /><category term="list comprehension" /><summary type="html">Antes de falar sobre map, filter e reduce, precisamos entender sobre fun√ß√£o de ordem superior.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/lambda-icon.png" /><media:content medium="image" url="http://localhost:4000/assets/images/lambda-icon.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>